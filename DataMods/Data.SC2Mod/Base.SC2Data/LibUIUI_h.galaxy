include "LibCore_h"
include "LibGame_h"
include "LibMapM_h"

//--------------------------------------------------------------------------------------------------
// Library: UI
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libUIUI_ge_UIHeroResourceType_NoShields = 0;
const int libUIUI_ge_UIHeroResourceType_Blue = 1;
const int libUIUI_ge_UIHeroResourceType_Blinking = 2;
const int libUIUI_ge_UIHeroResourceType_Yellow = 3;
const int libUIUI_ge_UIHeroResourceType_Orange = 4;
const int libUIUI_ge_UIHeroResourceType_Pink = 5;
const int libUIUI_ge_UIHeroResourceType_Grey = 6;
const int libUIUI_ge_UIHeroResourceType_Purple = 7;
const int libUIUI_ge_UIHeroResourceType_None = 8;
const int libUIUI_ge_HotkeyHotkeyType_HotkeyMissing = 0;
const int libUIUI_ge_HotkeyHotkeyType_HotkeyNormal = 1;
const int libUIUI_ge_HotkeyHotkeyType_HotkeyUpgrade = 2;
const int libUIUI_ge_HotkeyHotkeyType_HotkeyQuest = 3;
const int libUIUI_ge_UIFCTDirection_Left = 0;
const int libUIUI_ge_UIFCTDirection_Right = 1;
const int libUIUI_ge_UIFCTDirection_Middle = 2;
const int libUIUI_ge_UIFCTDirection_Vertical = 3;
const int libUIUI_ge_UIFCTDirection_LeftOrRight = 4;
const int libUIUI_ge_UIFCTDirection_Random = 5;
const int libUIUI_ge_FloatingTextType_NormalDamage = 0;
const int libUIUI_ge_FloatingTextType_MediumDamage = 1;
const int libUIUI_ge_FloatingTextType_HighDamage = 2;
const int libUIUI_ge_FloatingTextType_InsaneDamage = 3;
const int libUIUI_ge_FloatingTextType_Healing = 4;
const int libUIUI_ge_FloatingTextType_Mana = 5;
const int libUIUI_ge_FloatingTextType_PositiveStatus = 6;
const int libUIUI_ge_FloatingTextType_NegativeStatus = 7;
const int libUIUI_ge_FloatingTextType_XP = 8;
const int libUIUI_ge_FloatingTextType_GlobalXP = 9;
const int libUIUI_ge_FloatingTextType_BonusDamage = 10;
const int libUIUI_ge_FloatingTextDirection_Left = 0;
const int libUIUI_ge_FloatingTextDirection_Right = 1;
const int libUIUI_ge_FloatingTextDirection_Middle = 2;
const int libUIUI_ge_FloatingTextDirection_Vertical = 3;
const int libUIUI_ge_FloatingTextDirection_LeftOrRight = 4;
const int libUIUI_ge_FullscreenOverlayPriorities_Death = 0;
const int libUIUI_ge_FullscreenOverlayPriorities_VoidPrison = 1;
const int libUIUI_ge_FullscreenOverlayPriorities_Invulnerable = 2;
const int libUIUI_ge_FullscreenOverlayPriorities_Stasis = 3;
const int libUIUI_ge_UIHeroConsoleUnitStatus_None = 0;
const int libUIUI_ge_UIHeroConsoleUnitStatus_Default = 1;
const int libUIUI_ge_UIHeroConsoleUnitStatus_Blinking = 2;
const int libUIUI_ge_UIHeroConsoleUnitStatus_NoEnergy = 3;
const int libUIUI_ge_UIHeroConsoleUnitStatus_NoEnergyNoShield = 4;
const int libUIUI_ge_UIHeroConsoleUnitStatus_Orange = 5;
const int libUIUI_ge_UIHeroConsoleUnitStatus_Pink = 6;
const int libUIUI_ge_UIHeroConsoleUnitStatus_Yellow = 7;
const int libUIUI_ge_UIHeroLeaderboardSortButton_Kills = 0;
const int libUIUI_ge_UIHeroLeaderboardSortButton_Assists = 1;
const int libUIUI_ge_UIHeroLeaderboardSortButton_Deaths = 2;
const int libUIUI_ge_UIHeroLeaderboardSortButton_SiegeDamage = 3;
const int libUIUI_ge_UIHeroLeaderboardSortButton_HeroDamage = 4;
const int libUIUI_ge_UIHeroLeaderboardSortButton_HealedandAbsorbed = 5;
const int libUIUI_ge_UIHeroLeaderboardSortButton_DamageTaken = 6;
const int libUIUI_ge_UIHeroLeaderboardSortButton_XPContribution = 7;
const int libUIUI_ge_UIHeroLeaderboardSortingSortingType_DefaultSorting = 0;
const int libUIUI_ge_UIHeroLeaderboardSortingSortingType_Kills = 1;
const int libUIUI_ge_UIHeroLeaderboardSortingSortingType_Assists = 2;
const int libUIUI_ge_UIHeroLeaderboardSortingSortingType_Deaths = 3;
const int libUIUI_ge_UIHeroLeaderboardSortingSortingType_SiegeDamage = 4;
const int libUIUI_ge_UIHeroLeaderboardSortingSortingType_HeroDamage = 5;
const int libUIUI_ge_UIHeroLeaderboardSortingSortingType_HealedandAbsorbed = 6;
const int libUIUI_ge_UIHeroLeaderboardSortingSortingType_DamageTaken = 7;
const int libUIUI_ge_UIHeroLeaderboardSortingSortingType_XPContribution = 8;
const int libUIUI_ge_UIHeroLeaderboardSortingBestValue_AllyBestValue = 0;
const int libUIUI_ge_UIHeroLeaderboardSortingBestValue_AllyNotBestValue = 1;
const int libUIUI_ge_UIHeroLeaderboardSortingBestValue_EnemyBestValue = 2;
const int libUIUI_ge_UIHeroLeaderboardSortingBestValue_EnemyNotBestValue = 3;
const int libUIUI_ge_UIHeroLeaderboardContainerType_Stats = 0;
const int libUIUI_ge_UIHeroLeaderboardContainerType_Talents = 1;
const int libUIUI_ge_UIHeroLeaderboardContainerType_DeatD180Recap = 2;
const int libUIUI_ge_HeroSelectionRoleNumber_None = 0;
const int libUIUI_ge_HeroSelectionRoleNumber_Warrior = 1;
const int libUIUI_ge_HeroSelectionRoleNumber_Support = 2;
const int libUIUI_ge_HeroSelectionRoleNumber_Specialist = 3;
const int libUIUI_ge_HeroSelectionRoleNumber_Assasin1 = 4;
const int libUIUI_ge_HeroSelectionRoleNumber_Assasin2 = 5;
const int libUIUI_ge_HSUICellState_None = 0;
const int libUIUI_ge_HSUICellState_Empty = 1;
const int libUIUI_ge_HSUICellState_Normal = 2;
const int libUIUI_ge_HSUICellState_SelectedByMe = 3;
const int libUIUI_ge_HSUICellState_SelectedByOther = 4;
const int libUIUI_ge_HSUICellState_LockedByMe = 5;
const int libUIUI_ge_HSUICellState_LockedByOther = 6;
const int libUIUI_ge_HSUIPanelType_None = 0;
const int libUIUI_ge_HSUIPanelType_SkinPanel = 1;
const int libUIUI_ge_HSUIPanelType_MountPanel = 2;
const int libUIUI_ge_KillLogItemType_Kill = 0;
const int libUIUI_ge_KillLogItemType_Quest = 1;
const int libUIUI_ge_MapMechanicsRavenCourtModes_NoActivity = 0;
const int libUIUI_ge_MapMechanicsRavenCourtModes_TributeSpawning = 1;
const int libUIUI_ge_MapMechanicsRavenCourtModes_TributeSpawned = 2;
const int libUIUI_ge_MapMechanicsRavenCourtModes_Curse = 3;
const int libUIUI_ge_MapMechanicsBlackheartsBayModes_Doubloons = 0;
const int libUIUI_ge_MapMechanicsBlackheartsBayModes_Cannon = 1;
const int libUIUI_ge_MapMechanicsHauntedMinesModes_MinesTimer = 0;
const int libUIUI_ge_MapMechanicsHauntedMinesModes_Skulls = 1;
const int libUIUI_ge_MapMechanicsHauntedMinesModes_Golem = 2;
const int libUIUI_ge_MapMechanicsDragonShireModes_ShrineTimer = 0;
const int libUIUI_ge_MapMechanicsDragonShireModes_Shrines = 1;
const int libUIUI_ge_MapMechanicsDragonShireModes_Dragon = 2;
const int libUIUI_ge_MapMechanicsGardenOfTerrorModes_Day = 0;
const int libUIUI_ge_MapMechanicsGardenOfTerrorModes_Night = 1;
const int libUIUI_ge_MapMechanicsGardenOfTerrorGolemStatusText_Null = 0;
const int libUIUI_ge_MapMechanicsGardenOfTerrorGolemStatusText_Growing = 1;
const int libUIUI_ge_MapMechanicsGardenOfTerrorGolemStatusText_WaitToSummon = 2;
const int libUIUI_ge_MapMechanicsGardenOfTerrorGolemStatusText_ReadyToSummon = 3;
const int libUIUI_ge_MapMechanicsGardenOfTerrorGolemStatusText_Active = 4;
const int libUIUI_ge_UIPartyFrameHeroType_NormalHero = 0;
const int libUIUI_ge_UIPartyFrameHeroType_PetHero = 1;
const int libUIUI_ge_UIPartyFrameHeroType_LostVikings = 2;

// Constants
const fixed libUIUI_gv_dataXPPercentageUpdatePeriod_C2 = 3.0;
const fixed libUIUI_gv_dataXPPercentageUpdatePeriod_C3 = 5.0;
const int libUIUI_gv_deathRecap_DamageTakenPanelBarWidth_C = 96;
const int libUIUI_gv_deathRecap_MPercentLifeReference_C = 30;
const int libUIUI_gv_deathRecap_TotalEffectBarHeight_C = 250;
const int libUIUI_gv_deathRecap_TotalLineGraphPointHeight_C = 365;
const fixed libUIUI_gv_uICombatFloatingElementsRemoveDelay = 1.0;
const fixed libUIUI_gv_floatingCombatTextNormalDuration = 0.5;
const fixed libUIUI_gv_floatingCombatTextMediumDuration = 0.75;
const fixed libUIUI_gv_floatingCombatTextHighDuration = 1.0;
const fixed libUIUI_gv_floatingCombatTextInsaneDuration = 1.25;
const fixed libUIUI_gv_floatingCombatTextCoreDuration = 0.75;
const fixed libUIUI_gv_floatingCombatTextFadeDuration = 0.25;
const fixed libUIUI_gv_floatingCombatTextFadeDuration2 = 2.0;
const fixed libUIUI_gv_fullscreenOverlaysSpecialOverlayHideTimerDuration_C = 1.0;
const fixed libUIUI_gv_fullscreenOverlaysDeathOverlayHideTimerDuration_C = 2.0;
const int libUIUI_gv_fullscreenOverlayMaxQueueSize_C = 10;
const int libUIUI_gv_uI_HealingFountainsHelpText_ArraySize_C = 31;
const fixed libUIUI_gv_uI_HealingFountainsHelpText_HeightOffset_C = 2.0;
const int libUIUI_gv_uIHeroConsoleUnitStatusMaximum = 7;
const int libUIUI_gv_uIHeroLeaderboardMaxSortingButtons = 8;
const int libUIUI_gv_heroSelectionNumberofRows = 5;
const int libUIUI_gv_heroSelectionNumberofCols = 8;
const int libUIUI_gv_hSUILoadoutMaxSkinItemCount_C = 12;
const int libUIUI_gv_hSUILoadoutMaxSkinLaneCount_C = 2;
const int libUIUI_gv_hSUILoadoutMaxMountItemCount_C = 18;
const int libUIUI_gv_hSUILoadoutMaxMountItemCount_Collapsed_C = 12;
const int libUIUI_gv_hSUILoadoutMaxMountLaneCount_C = 3;
const int libUIUI_gv_hSUILoadoutMaxCategoryButtonCount_C = libCore_gv_data_MaxHeroAllowedMountCategories_C;
const int libUIUI_gv_hSUILoadoutMaxListItemCount_C = libGame_gv_loadoutMaximumLoadoutsPerHero;
const int libUIUI_gv_hSUILoadoutMaxFilterCount_C = 3;
const int libUIUI_gv_uI_MaxHeroGroupStatusFrames = 10;
const int libUIUI_gv_uIUnitStatusFramesClassIconDefaultPoints = 3;
const int libUIUI_gv_killLogTopOffset_D0A1 = 80;
const int libUIUI_gv_killLogMaxVisibleItemCountD0A1 = 5;
const int libUIUI_gv_killLogMaxItemCountD0A1 = 6;
const int libUIUI_gv_killLogMaxComboPortraitsD0A1 = 11;
const int libUIUI_gv_killLogMaxComboIconsD0A1 = 4;
const fixed libUIUI_gv_killLogTimeoutD0A1 = libGame_gv_heroDeathMultikillTimeoutDuration;
const int libUIUI_gv_mapMechanicsBlackheartsBayCannonballCount_C = 12;
const fixed libUIUI_gv_mapMechanicsBlackheartsBayChestsSpawnedFrameTimerDuration_C = 8.0;
const fixed libUIUI_gv_partyFrameTimersUpdateDelay_C = 0.2;
const int libUIUI_gv_uIPartyFrameHeroSlot_C = 1;
const int libUIUI_gv_uIPartyFrameHeroPetSlot_C = 2;
const int libUIUI_gv_uIPartyFrameHeroSlotA_C = 1;
const int libUIUI_gv_uIPartyFrameHeroSlotB_C = 2;
const int libUIUI_gv_uIPartyFrameHeroSlotC_C = 3;
const int libUIUI_gv_teamXPPartyFrameTeamPingCap_C = 2;
const int libUIUI_gv_uIPingMaxCount_C = 5;
const fixed libUIUI_gv_uIPingInputSuppressionTime_C = 0.25;
const fixed libUIUI_gv_uIPingCountResetTime_C = 3.0;
const fixed libUIUI_gv_uIPingLockoutTime_C = 4.0;
const fixed libUIUI_gv_uIOnMyWayPingPathDisplayDuration = 6.0;
const int libUIUI_gv_uIPingTargetMaxCount_C = 64;

// Structures
struct libUIUI_gs_UIDamageFlashUI {
    int lv_mainDialog;
    int lv_lightSplashImage;
    int lv_intenseSplashImage;
    int lv_lowHealthPersistentImage;
};

struct libUIUI_gs_DeathRecapPanel {
    int lv_mainPanel;
    int lv_tabScreenButton;
    int lv_openDeathRecapButton;
    int lv_mainGraphLabel;
    int lv_highestDamagersPanel;
    int[libGame_gv_deathRecap_MaxMaxDamagersSort_C + 1] lv_highestDamagersImages;
    int[libGame_gv_deathRecap_MaxMaxDamagersSort_C + 1] lv_highestDamagersAmountLabels;
    int[libGame_gv_deathRecap_MaxMaxDamagersSort_C + 1] lv_highestDamagersHeroNameLabels;
    int[libGame_gv_deathRecap_MaxMaxDamagersSort_C + 1] lv_highestDamagersPlayerNameLabels;
    int[libGame_gv_deathRecap_MaxMaxDamagersSort_C + 1] lv_highestDamagersProgressBars;
    int[libGame_gv_deathRecap_MaxMaxDamagersSort_C + 1][libGame_gv_deathRecap_MaxMaxDamageAbilsSort_C + 1] lv_highestDamagersAbilityBars;
    int[libGame_gv_deathRecap_MaxMaxDamagersSort_C + 1][libGame_gv_deathRecap_MaxMaxDamageAbilsSort_C + 1] lv_highestDamagersAbilityBarTooltips;
    int[libGame_gv_deathRecap_MaxMaxDamagersSort_C + 1][libGame_gv_deathRecap_MaxMaxDamageAbilsSort_C + 1] lv_highestDamagersAbilityBarProgressBars;
    int[libGame_gv_deathRecap_MaxMaxDamagersSort_C + 1][libGame_gv_deathRecap_MaxMaxDamageAbilsSort_C + 1] lv_highestDamagersAbilityLabels;
    int[libGame_gv_deathRecap_MaxMaxDamagersSort_C + 1][libGame_gv_deathRecap_MaxMaxDamageAbilsSort_C + 1] lv_highestDamagersAbilAmountLabels;
    int[libGame_gv_deathRecap_MaxMaxDamagersSort_C + 1][libGame_gv_deathRecap_MaxMaxDamageAbilsSort_C + 1] lv_highestDamagersAbilityFrame;
    int lv_abilitiesPanel;
    int[libGame_gv_deathRecap_MaxEffectsBars_C + 1] lv_abilitiesPanelTimeZone;
    int[libGame_gv_deathRecap_MaxEffectsBars_C + 1] lv_abilitiesPanelHeroImages;
    int[libGame_gv_deathRecap_MaxEffectsBars_C + 1] lv_abilitiesPanelHealthBars;
    int[libGame_gv_deathRecap_MaxEffectsBars_C + 1] lv_abilitiesPanelHealingBars;
    int[libGame_gv_deathRecap_MaxEffectsBars_C + 1] lv_abilitiesPanelDamageBars;
    int[libGame_gv_deathRecap_MaxEffectsBars_C + 1] lv_abilitiesPanelHealthBarIcons;
    int[libGame_gv_deathRecap_MaxEffectsBars_C + 1] lv_abilitiesPanelHealthBarIconBorders;
    int[libGame_gv_deathRecap_MaxEffectsBars_C + 1] lv_abilitiesPanelHealthBarTimeLabels;
    int[libGame_gv_deathRecap_MaxEffectsBars_C + 1] lv_abilitiesPanelEventCountLabels;
    int[libGame_gv_deathRecap_MaxEffectsBars_C + 1] lv_abilitiesPanelTooltipFrame;
    int lv_abilitiesPanelStartingHealthLabel;
};

struct libUIUI_gs_FullscreenOverlaysPanel {
    int lv_mainDialog;
    int lv_cCSplashImage;
    int lv_flashBangImage;
    int lv_abathurSymbioteOverlay;
    int lv_deathOverlay;
    int lv_specialOverlay;
};

struct libUIUI_gs_FullscreenOverlayPanelRework {
    int lv_mainDialog;
    int lv_overlayCutscene;
};

struct libUIUI_gs_FullscreenOverlayQueue {
    string[libUIUI_gv_fullscreenOverlayMaxQueueSize_C + 1] lv_cutscene;
    int lv_numberOfItemsInQueue;
    int[libUIUI_gv_fullscreenOverlayMaxQueueSize_C + 1] lv_priority;
    string[libUIUI_gv_fullscreenOverlayMaxQueueSize_C + 1] lv_behavior;
};

struct libUIUI_gs_GameOverSplash {
    int lv_mainPanel;
    int lv_victoryFrame;
    int lv_defeatFrame;
    int lv_defeatLabel;
    int lv_leaveButton;
};

struct libUIUI_gs_UIGameUIHandles {
    int lv_gameUI;
    int lv_fullscreenUpperContainer;
    int lv_fullscreenLowerContainer;
    int lv_consoleUIContainer;
    int lv_consolePanel;
    int lv_helpButton;
    int lv_gameMenuButton;
    int lv_gameUIContainer;
    int lv_pingButton;
    int lv_minimapPanel;
    int lv_disableMinimapCommandsButton;
    int lv_enableMinimapCommandsButton;
    int lv_serverLabel;
    int lv_gameVersionLabel;
    int lv_matchIDLabel;
};

struct libUIUI_gs_HealingFountainHelperTags {
    int lv_textTag;
    int lv_cooldown;
    unit lv_healingFountain;
};

struct libUIUI_gs_UIHeroConsole {
    int lv_heroConsolePanel;
    int lv_heroStatsFrame;
    int[libUIUI_gv_uIHeroConsoleUnitStatusMaximum + 1] lv_heroStatsUnitStatusFrame;
    int lv_heroStatsHealthBar;
    int lv_heroStatsManaBar;
    int lv_gameUIPortrait;
    int lv_gameUICommandPanel;
    int lv_gameUICommandCardPanelFrame;
    int lv_gameUIInventoryPanel;
    int lv_buffDebuffPanel;
    int lv_buffBar;
    int lv_debuffBar;
    int lv_neutralBar;
};

struct libUIUI_gs_HeroConsoleUnitStatusBars {
    int lv_stunDeathBarParentFrame;
    int lv_stunDeathBarLeftBar;
    int lv_stunDeathBarRightBar;
    int lv_stunDeathBarIcon;
    int lv_stunDeathBarDescriptionLabel;
    int lv_stunDeathBarTimeLabel;
    int lv_castChannelBarParentFrame;
    int lv_behaviorChannelBarParentFrame;
    int lv_behaviorChannelBarDurationBar;
    int lv_behaviorChannelBarBehaviorLabel;
};

struct libUIUI_gs_UIHeroLeaderboard {
    int lv_mainDialog;
    int lv_statsContainer;
    int lv_talentsContainer;
    int lv_deathRecapContainer;
    int[libCore_gv_bALMaxPlayers + 1] lv_statsContainerPlayer;
    int lv_sortButtonKills;
    int lv_sortButtonAssists;
    int lv_sortButtonDeaths;
    int lv_sortButtonSiegeDamage;
    int lv_sortButtonHeroDamage;
    int lv_sortButtonHealedAndAbsorbed;
    int lv_sortButtonDamageTaken;
    int lv_sortButtonXPContribution;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFrameMainDialog;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFramePlayerName;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFrameHeroName;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFrameHeroIconImage;
    int[libCore_gv_bALMaxPlayers + 1] lv_statsKillsLabel;
    int[libCore_gv_bALMaxPlayers + 1] lv_statsKillsFrame;
    int[libCore_gv_bALMaxPlayers + 1] lv_statsAssistsLabel;
    int[libCore_gv_bALMaxPlayers + 1] lv_statsAssistsFrame;
    int[libCore_gv_bALMaxPlayers + 1] lv_statsDeathsLabel;
    int[libCore_gv_bALMaxPlayers + 1] lv_statsDeathsFrame;
    int[libCore_gv_bALMaxPlayers + 1] lv_statsSiegeDamageLabel;
    int[libCore_gv_bALMaxPlayers + 1] lv_statsSiegeDamageFrame;
    int[libCore_gv_bALMaxPlayers + 1] lv_statsHeroDamageLabel;
    int[libCore_gv_bALMaxPlayers + 1] lv_statsHeroDamageFrame;
    int[libCore_gv_bALMaxPlayers + 1] lv_statsHealedandAbsorbedLabel;
    int[libCore_gv_bALMaxPlayers + 1] lv_statsHealedandAbsorbedFrame;
    int[libCore_gv_bALMaxPlayers + 1] lv_statsDamageTakenLabel;
    int[libCore_gv_bALMaxPlayers + 1] lv_statsDamageTakenFrame;
    int[libCore_gv_bALMaxPlayers + 1] lv_statsXPContributionLabel;
    int[libCore_gv_bALMaxPlayers + 1] lv_statsXPContributionFrame;
    int[libCore_gv_bALMaxPlayers + 1] lv_statsMapMechanicImage;
    int[libCore_gv_bALMaxPlayers + 1] lv_statsMapMechanicLabel;
    int[libCore_gv_bALMaxPlayers + 1] lv_talentsContainerFrame;
    int[libCore_gv_bALMaxPlayers + 1][libCore_gv_dataHeroesMaxTalentTiers + 1] lv_talentsContainerTalentFrame;
    int[libCore_gv_bALMaxPlayers + 1][libCore_gv_dataHeroesMaxTalentTiers + 1] lv_talentsContainerTalentIcon;
    int[libCore_gv_bALMaxPlayers + 1][libCore_gv_dataHeroesMaxTalentTiers + 1] lv_talentsContainerTalentQuestProgressBar;
    int[libCore_gv_bALMaxPlayers + 1][libCore_gv_dataHeroesMaxTalentTiers + 1] lv_talentsContainerTalentTooltip;
    int[libCore_gv_bALMaxPlayers + 1][libCore_gv_dataHeroesMaxTalentTiers + 1] lv_talentsContainerTalentTooltipNameLabel;
    int[libCore_gv_bALMaxPlayers + 1][libCore_gv_dataHeroesMaxTalentTiers + 1] lv_talentsContainerTalentTooltipInfoLabel;
    int[libCore_gv_bALMaxPlayers + 1][libCore_gv_dataHeroesMaxTalentTiers + 1] lv_talentsContainerTalentTooltipDescriptionLabel;
    int[libCore_gv_bALMaxPlayers + 1][libCore_gv_dataHeroesMaxTalentTiers + 1] lv_talentsContainerTalentTooltipQuestProgressionLabel;
};

struct libUIUI_gs_HeroSelection {
    int lv_dialog;
    int lv_mainPanel;
    int lv_countdownLabel;
    int lv_finalCountdownFrame;
    int lv_titleLabel;
    int lv_selectedHeroPanel;
    int lv_selectedHeroName;
    int lv_selectedHeroRole;
    int lv_pickHeroPanel;
    int[libCore_gv_talents_MaxPrepickedTalentProfiles_C + 1] lv_buildButtons;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtons;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonImage;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBorder;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersEmpty;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersSelectedByMe1;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersSelectedByMe2;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersSelectedByMe3;
    bool[libCore_gv_bALMaxEnginePlayerCount + 1][libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersSelectedByMeVisible;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersSelectedByAlly1;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersSelectedByAlly2;
    bool[libCore_gv_bALMaxEnginePlayerCount + 1][libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersSelectedByAllyVisible;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersThinking;
    bool[libCore_gv_bALMaxEnginePlayerCount + 1][libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersThinkingVisible;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersLockedbyMe1;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersLockedbyMe2;
    bool[libCore_gv_bALMaxEnginePlayerCount + 1][libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersLockedByMeVisible;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersLockedByAlly1;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersLockedByAlly2;
    bool[libCore_gv_bALMaxEnginePlayerCount + 1][libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersLockedByAllyVisible;
    int lv_teamPanel;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamHeroFrame;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamHeroImage;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamHeroRole;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamHeroRoleBG;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamHeroEmpty;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamHeroBorder;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamHeroLocked;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamHeroLockedAnimation;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamHeroSelectedAlly;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamHeroThinking;
    int[libCore_gv_bALMaxEnginePlayerCount + 1][libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamPanelRowPlayer;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamHeroPlayerName;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamHeroHeroName;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroContainerFrame;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroCutsceneFrame;
    int lv_abilitiesButton;
    int lv_talentsButton;
    int lv_brawlButton;
    int lv_lockButton;
    int lv_debugCrazyBtn;
    int lv_debugRerollBtn;
    int lv_abilitiesPanel;
    int lv_abilitiesPanelCloseButton;
    int lv_abilitiesPanelHeroContainerFrame;
    int lv_abilitiesPanelUniverseIconImage;
    int lv_abilitiesPanelNameLabel;
    int lv_abilitiesPanelInfoLabel;
    int lv_abilitiesPanelAbilitiesTileList;
    int lv_abilitiesPanelPairedHeroTileList;
    int lv_abilitiesPanelPairedHeroTileListName;
    int[libCore_gv_dataHeroesNumberOfPairedHeroesPerHero + 1] lv_abilitiesPanelPairedHeroTileListItem;
    int[libCore_gv_dataHeroesNumberOfPairedHeroesPerHero + 1] lv_abilitiesPanelPairedHeroTileListItemHeroImage;
    int[libCore_gv_dataHeroesNumberOfBasicAbilitiesPerHero + 1] lv_abilitiesPanelBasicAbilItem;
    int[libCore_gv_dataHeroesNumberOfBasicAbilitiesPerHero + 1] lv_abilitiesPanelBasicAbilItemIconImage;
    int[libCore_gv_dataHeroesNumberOfBasicAbilitiesPerHero + 1] lv_abilitiesPanelBasicAbilItemNameLabel;
    int[libCore_gv_dataHeroesNumberOfBasicAbilitiesPerHero + 1] lv_abilitiesPanelBasicAbilItemDescriptionSimpleLabel;
    int[libCore_gv_dataHeroesNumberOfBasicAbilitiesPerHero + 1] lv_abilitiesPanelBasicAbilItemHotkeyFrame;
    int[libCore_gv_dataHeroesNumberOfBasicAbilitiesPerHero + 1] lv_abilitiesPanelBasicAbilItemHotkeyLabel;
    int[libCore_gv_dataHeroesNumberOfBasicAbilitiesPerHero + 1] lv_abilitiesPanelBasicAbilItemSelector;
    int[libCore_gv_dataHeroesNumberOfBasicAbilitiesPerHero + 1][libCore_gv_dataHeroesNumberOfBasicAbilitiyVariationsPerAbility + 1] lv_abilitiesPanelBasicAbilItemSelectorButton;
    int[libCore_gv_dataHeroesNumberOfBasicAbilitiesPerHero + 1] lv_abilitiesPanelBasicAbilItemTooltipFrame;
    int[libCore_gv_dataHeroesNumberOfBasicAbilitiesPerHero + 1] lv_abilitiesPanelBasicAbilItemTooltipNameLabel;
    int[libCore_gv_dataHeroesNumberOfBasicAbilitiesPerHero + 1] lv_abilitiesPanelBasicAbilItemTooltipInfoLabel;
    int[libCore_gv_dataHeroesNumberOfBasicAbilitiesPerHero + 1] lv_abilitiesPanelBasicAbilItemTooltipDescriptionLabel;
    int lv_abilitiesPanelTraitAbilItem;
    int lv_abilitiesPanelTraitAbilItemIconImage;
    int lv_abilitiesPanelTraitAbilItemNameLabel;
    int lv_abilitiesPanelTraitAbilItemDescriptionSimpleLabel;
    int lv_abilitiesPanelTraitAbilItemHotkeyFrame;
    int lv_abilitiesPanelTraitAbilItemHotkeyLabel;
    int lv_abilitiesPanelTraitAbilItemTooltipFrame;
    int lv_abilitiesPanelTraitAbilItemTooltipNameLabel;
    int lv_abilitiesPanelTraitAbilItemTooltipInfoLabel;
    int lv_abilitiesPanelTraitAbilItemTooltipDescriptionLabel;
    int[libCore_gv_dataHeroesNumberOfHeroicAbilitiesPerHero + 1] lv_abilitiesPanelHeroicAbilItem;
    int[libCore_gv_dataHeroesNumberOfHeroicAbilitiesPerHero + 1] lv_abilitiesPanelHeroicAbilItemIconImage;
    int[libCore_gv_dataHeroesNumberOfHeroicAbilitiesPerHero + 1] lv_abilitiesPanelHeroicAbilItemNameLabel;
    int[libCore_gv_dataHeroesNumberOfHeroicAbilitiesPerHero + 1] lv_abilitiesPanelHeroicAbilItemDescriptionSimpleLabel;
    int[libCore_gv_dataHeroesNumberOfHeroicAbilitiesPerHero + 1] lv_abilitiesPanelHeroicAbilItemHotkeyFrame;
    int[libCore_gv_dataHeroesNumberOfHeroicAbilitiesPerHero + 1] lv_abilitiesPanelHeroicAbilItemHotkeyLabel;
    int[libCore_gv_dataHeroesNumberOfHeroicAbilitiesPerHero + 1] lv_abilitiesPanelHeroicAbilItemTooltipFrame;
    int[libCore_gv_dataHeroesNumberOfHeroicAbilitiesPerHero + 1] lv_abilitiesPanelHeroicAbilItemTooltipNameLabel;
    int[libCore_gv_dataHeroesNumberOfHeroicAbilitiesPerHero + 1] lv_abilitiesPanelHeroicAbilItemTooltipInfoLabel;
    int[libCore_gv_dataHeroesNumberOfHeroicAbilitiesPerHero + 1] lv_abilitiesPanelHeroicAbilItemTooltipDescriptionLabel;
    int lv_abilitiesPanelActiveAbilItem;
    int lv_abilitiesPanelActiveAbilItemIconImage;
    int lv_abilitiesPanelActiveAbilItemNameLabel;
    int lv_abilitiesPanelActiveAbilItemDescriptionSimpleLabel;
    int lv_abilitiesPanelActiveAbilItemHotkeyFrame;
    int lv_abilitiesPanelActiveAbilItemHotkeyLabel;
    int lv_abilitiesPanelActiveAbilItemSelector;
    int[libCore_gv_dataHeroesNumberOfBasicAbilitiyVariationsPerAbility + 1] lv_abilitiesPanelActiveAbilItemSelectorButton;
    int lv_abilitiesPanelActiveAbilItemTooltipFrame;
    int lv_abilitiesPanelActiveAbilItemTooltipNameLabel;
    int lv_abilitiesPanelActiveAbilItemTooltipInfoLabel;
    int lv_abilitiesPanelActiveAbilItemTooltipDescriptionLabel;
    int lv_abilitiesPanelPassiveAbilItem;
    int lv_abilitiesPanelPassiveAbilItemIconImage;
    int lv_abilitiesPanelPassiveAbilItemNameLabel;
    int lv_abilitiesPanelPassiveAbilItemDescriptionSimpleLabel;
    int lv_abilitiesPanelPassiveAbilItemHotkeyFrame;
    int lv_abilitiesPanelPassiveAbilItemHotkeyLabel;
    int lv_abilitiesPanelPassiveAbilItemSelector;
    int[libCore_gv_dataHeroesNumberOfBasicAbilitiyVariationsPerAbility + 1] lv_abilitiesPanelPassiveAbilItemSelectorButton;
    int lv_abilitiesPanelPassiveAbilItemTooltipFrame;
    int lv_abilitiesPanelPassiveAbilItemTooltipNameLabel;
    int lv_abilitiesPanelPassiveAbilItemTooltipInfoLabel;
    int lv_abilitiesPanelPassiveAbilItemTooltipDescriptionLabel;
    int lv_talentsPanel;
    int lv_talentsPanelCloseButton;
    int lv_talentsPanelHeroContainerFrame;
    int lv_talentsPanelUniverseIconImage;
    int lv_talentsPanelNameLabel;
    int lv_talentsPanelInfoLabel;
    int[libCore_gv_dataHeroesMaxTalentTiers + 1] lv_talentsPanelTierButton;
    int[libCore_gv_dataHeroesMaxTalentsPerTier + 1] lv_talentsPanelTalentButton;
    int[libCore_gv_dataHeroesMaxTalentsPerTier + 1] lv_talentsPanelTalentButtonIconImage;
    int[libCore_gv_dataHeroesMaxTalentsPerTier + 1] lv_talentsPanelTalentButtonHotkeyFrame;
    int[libCore_gv_dataHeroesMaxTalentsPerTier + 1] lv_talentsPanelTalentButtonHotkeyLabel;
    int[libCore_gv_dataHeroesMaxTalentsPerTier + 1] lv_talentsPanelTalentButtonNameLabel;
    int[libCore_gv_dataHeroesMaxTalentsPerTier + 1] lv_talentsPanelTalentButtonDescriptionSimpleLabel;
    int[libCore_gv_dataHeroesMaxTalentsPerTier + 1] lv_talentsPanelTooltipFrame;
    int[libCore_gv_dataHeroesMaxTalentsPerTier + 1] lv_talentsPanelTooltipNameLabel;
    int[libCore_gv_dataHeroesMaxTalentsPerTier + 1] lv_talentsPanelTooltipInfoLabel;
    int[libCore_gv_dataHeroesMaxTalentsPerTier + 1] lv_talentsPanelTooltipDescriptionLabel;
};

struct libUIUI_gs_HeroSelectionSetting {
    timer lv_countdownTimer;
    bool[libCore_gv_bALMaxEnginePlayerCount + 1] lv_lockedIn;
    int[libCore_gv_bALMaxEnginePlayerCount + 1] lv_selectedHeroRow;
    int[libCore_gv_bALMaxEnginePlayerCount + 1] lv_selectedHeroCol;
    int[libCore_gv_bALMaxEnginePlayerCount + 1] lv_lockedHeroRow;
    int[libCore_gv_bALMaxEnginePlayerCount + 1] lv_lockedHeroCol;
    bool lv_countDownEmdWarning;
    bool lv_finalCountDownStarted;
    int[libCore_gv_bALMaxEnginePlayerCount + 1] lv_talentTierPressedButton;
    bool[libCore_gv_bALMaxEnginePlayerCount + 1] lv_heroAbilitiesButtonToggled;
    bool[libCore_gv_bALMaxEnginePlayerCount + 1] lv_heroTalentsButtonToggled;
    bool[libCore_gv_bALMaxEnginePlayerCount + 1] lv_heroLoadoutButtonToggled;
    bool[libCore_gv_bALMaxEnginePlayerCount + 1] lv_heroInfoButtonToggled;
    int[libCore_gv_bALMaxEnginePlayerCount + 1][libCore_gv_dataHeroesNumberOfBasicAbilitiesPerHero + 1] lv_abilitySelectorToggledBasic;
    int[libCore_gv_bALMaxEnginePlayerCount + 1] lv_abilitySelectorToggledActive;
    int[libCore_gv_bALMaxEnginePlayerCount + 1] lv_abilitySelectorToggledPassive;
};

struct libUIUI_gs_HSUILoadout {
    int lv_mainPanel;
    int lv_loadoutButton;
    int lv_closeButton;
    int lv_previewPanel;
    int lv_previewPanelMountCutscene;
    int lv_purchaseInfoPanel;
    int lv_purchaseInfoPanelName;
    int lv_purchaseInfoPanelDescription;
    int lv_purchaseCurrencySelectPanel;
    int lv_purchaseConfirmPanel;
    int lv_purchaseConfirmPanelConfirmButton;
    int lv_purchaseConfirmPanelCancelButton;
    int lv_loadoutSelectionPanel;
    int lv_loadoutSelectionPanelPulldown;
    int[libUIUI_gv_hSUILoadoutMaxListItemCount_C + 1] lv_loadoutSelectionPanelPulldownListItem;
    int lv_loadoutSelectionPanelNameEditBox;
    int lv_skinsButton;
    int lv_mountButton;
    int lv_bannersButton;
    int lv_spraysButton;
    int lv_announcerPacksButton;
    int lv_voiceLinesButton;
    int lv_skinsPanel;
    int[libUIUI_gv_hSUILoadoutMaxSkinItemCount_C + 1] lv_skinsPanelItemButton;
    int lv_skinsPanelScrollBar;
    int lv_skinsPanelScrollEditBox;
    int lv_skinsPanelSearchEditBox;
    int lv_skinsPanelSelectedContentLabel;
    int lv_skinsPanelOwnershipFilterPulldown;
    int[libUIUI_gv_hSUILoadoutMaxListItemCount_C + 1] lv_skinsPanelOwnershipFilterPulldownListItem;
    int lv_mountsPanel;
    int[libUIUI_gv_hSUILoadoutMaxMountItemCount_C + 1] lv_mountsPanelItemButton;
    int lv_mountsPanelScrollBar;
    int lv_mountsPanelScrollEditBox;
    int lv_mountsPanelSearchEditBox;
    int lv_mountsPanelSelectedContentLabel;
    int lv_mountsPanelOwnershipFilterPulldown;
    int[libUIUI_gv_hSUILoadoutMaxListItemCount_C + 1] lv_mountsPanelOwnershipFilterPulldownListItem;
    int[libUIUI_gv_hSUILoadoutMaxCategoryButtonCount_C + 1] lv_mountsPanelCategoryButton;
    int lv_mountsPanelReplacementContainerItem;
    int lv_mountsPanelReplacementContainerItemIcon;
    int lv_mountsPanelReplacementContainerItemNameLabel;
    int lv_mountsPanelReplacementContainerItemDescriptionLabel;
    int lv_mountsPanelReplacementContainerItemHotkeyLabel;
    int lv_mountsPanelReplacementContainerItemTooltip;
    int lv_mountsPanelReplacementContainerItemTooltipNameLabel;
    int lv_mountsPanelReplacementContainerItemTooltipInfoLabel;
    int lv_mountsPanelReplacementContainerItemTooltipDescriptionLabel;
};

struct libUIUI_gs_HSUILoadoutPlayer {
    int lv_selectedPanel;
    int lv_tempSelectedLoadoutIndex;
    int lv_tempSelectedSkinIndex;
    int lv_tempSelectedMountIndex;
    int lv_tempSelectedMountCollectionCategoryIndex;
    int[libCore_gv_dataHeroesMaxAllowedSkinCount_C + 1] lv_tempSkinArray;
    int lv_tempSkinCount;
    int[libCore_gv_dataMountsMaxMountCount + 1] lv_tempMountArray;
    int lv_tempMountCount;
    int[libUIUI_gv_hSUILoadoutMaxCategoryButtonCount_C + 1] lv_tempMountCategoryArray;
    int[libUIUI_gv_hSUILoadoutMaxSkinItemCount_C + 1] lv_filledSkinSkinItemIndex;
    int[libUIUI_gv_hSUILoadoutMaxMountItemCount_C + 1] lv_filledMountMountItemIndex;
    int[libUIUI_gv_hSUILoadoutMaxCategoryButtonCount_C + 1] lv_filledMountMountCategoryIndex;
    int lv_filledSkinTotalCount;
    int lv_filledMountTotalCount;
    int lv_laneControllerSkinCurrentLane;
    int lv_laneControllerMountCurrentLane;
    int lv_laneControllerSkinMaxLaneCount;
    int lv_laneControllerMountMaxLaneCount;
    fixed lv_lastScrollTime;
};

struct libUIUI_gs_UIHeroStatusFrame {
    int lv_playerNameLabel;
    int lv_heroNameLabel;
    int lv_botDifficultyLabel;
    int lv_botStatusLabel;
    int lv_mapMechanicFrame;
    int lv_mapMechanicIcon;
    int lv_mapMechanicCount;
};

struct libUIUI_gs_UIHeroTrackerArrows {
    int lv_unitCount;
    unit[libUIUI_gv_uI_MaxHeroGroupStatusFrames + 1] lv_unit;
    int lv_mainPanel;
    int[libUIUI_gv_uI_MaxHeroGroupStatusFrames + 1] lv_offscreenUnit;
    int[libUIUI_gv_uI_MaxHeroGroupStatusFrames + 1] lv_arrow;
    int[libUIUI_gv_uI_MaxHeroGroupStatusFrames + 1] lv_portraitImage;
};

struct libUIUI_gs_JCIInfo {
    unit lv_bannerUnit;
    unit lv_bannerHolder;
    int lv_dialog;
    int lv_mainPanel;
    int lv_campTimerLabel;
    int lv_campEliteLabel;
    int lv_campTitleLabel;
    int lv_playerNameLabel;
    int lv_campDescriptionLabel;
    int lv_debugLabel;
};

struct libUIUI_gs_KillLogItem {
    unit lv_unit;
    int lv_player;
    timer lv_timer;
    int lv_frame;
    int lv_combo;
    int lv_type;
};

struct libUIUI_gs_KillLogQuestArray {
    string[libUIUI_gv_killLogMaxComboIconsD0A1 + 1] lv_quests;
};

struct libUIUI_gs_KillLogDebugPanel {
    int lv_mainPanel;
    int lv_closeButton;
    int[libCore_gv_bALMaxEnginePlayerCount + 1] lv_killButtons;
    int[libCore_gv_bALMaxPlayers + 1] lv_questButtons;
    int lv_killCheckbox;
    int lv_questCheckbox;
};

struct libUIUI_gs_MapMechanicsPanel {
    int lv_mainPanel;
    int lv_ravenCourtPanel;
    int lv_ravenCourtTributeSpawnFrame;
    int lv_ravenCourtTributeSpawnInfoLabel;
    int lv_ravenCourtTributeSpawnTimerLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_ravenCourtTeamTributeFrame;
    int[libCore_gv_bALMaxTeams + 1] lv_ravenCourtTeamTributeCounterLabel;
    int lv_ravenCourtCurseFrame;
    int lv_ravenCourtCurseInfoLabel;
    int lv_ravenCourtCurseTimerLabel;
    int lv_blackheartsBayPanel;
    int lv_blackheartsBayChestSpawnFrame;
    int lv_blackheartsBayDoubloonModeFrame;
    int[libCore_gv_bALMaxTeams + 1] lv_blackheartsBayDoubloonCounterLabel;
    int lv_blackheartsBayCannonModeFrame;
    int lv_blackheartsBayCannonRemainingCannonballsLabel;
    int[libUIUI_gv_mapMechanicsBlackheartsBayCannonballCount_C + 1] lv_blackheartsBayCannonCannonballImages;
    int[libCore_gv_bALMaxTeams + 1] lv_blackheartsBayCannonShotCounterLabel;
    int lv_hauntedMinesPanel;
    int lv_hauntedMinesSkullModeFrame;
    int lv_hauntedMinesSkullModeRemainingSkullsLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_hauntedMinesSkullModeSkullCounterLabel;
    int lv_hauntedMinesMineTimerModeFrame;
    int lv_hauntedMinesMineTimerLabel;
    int lv_hauntedMinesGolemModeFrame;
    int lv_hauntedMinesAllyGolemHealthUnitStatus;
    int lv_hauntedMinesEnemyGolemHealthUnitStatus;
    int lv_hauntedMinesAllyGolemModeSkullCounterLabel;
    int lv_hauntedMinesEnemyGolemModeSkullCounterLabel;
    int lv_dragonShirePanel;
    int lv_dragonShireShrineTimerModeFrame;
    int lv_dragonShireShrineTimerLabel;
    int lv_dragonShireShrineModeFrame;
    int[libCore_gv_bALMaxTeams + 1] lv_dragonShireMoonShrineDisabledImage;
    int[libCore_gv_bALMaxTeams + 1] lv_dragonShireMoonShrineEnabledImage;
    int[libCore_gv_bALMaxTeams + 1] lv_dragonShireStarShrineDisabledImage;
    int[libCore_gv_bALMaxTeams + 1] lv_dragonShireStarShrineEnabledImage;
    int lv_dragonShireDragonModeFrame;
    int lv_dragonShireDragonInfoLabel;
    int lv_dragonShireDragonTimerLabel;
    int lv_dragonShireDragonHealthUnitStatus;
    int lv_dragonShireDragonHealthLabel;
    int lv_gardenOfTerrorPanel;
    int lv_gardenOfTerrorSeedsFrame;
    int[libCore_gv_bALMaxTeams + 1] lv_gardenOfTerrorSeedsFrameSeedCounterLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_gardenOfTerrorSeedsFrameStatusLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_gardenOfTerrorSeedsFrameStatusLabelFlashGold;
    int[libCore_gv_bALMaxTeams + 1] lv_gardenOfTerrorSeedsFrameStatusLabelFlashRed;
    int[libCore_gv_bALMaxTeams + 1] lv_gardenOfTerrorSeedsFrameCountdownLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_gardenOfTerrorSeedsFrameCountdownLabelGold;
    int[libCore_gv_bALMaxTeams + 1] lv_gardenOfTerrorSeedsFrameCountdownLabelRed;
    int[libCore_gv_bALMaxTeams + 1] lv_gardenOfTerrorSeedsFrameBlueSeedImage;
    int[libCore_gv_bALMaxTeams + 1] lv_gardenOfTerrorSeedsFrameRedSeedImage;
    int lv_gardenOfTerrorTimeOfDayFrame;
    int lv_gardenOfTerrorTimeOfDayCountdownLabel;
    int lv_gardenOfTerrorGolemFrame;
    int lv_gardenOfTerrorGolemFrameAllyGolemHealthUnitStatus;
    int lv_gardenOfTerrorGolemFrameEnemyGolemHealthUnitStatus;
    int lv_gardenOfTerrorGolemFrameAllyGolemStatusLabel;
    int lv_gardenOfTerrorGolemFrameEnemyGolemStatusLabel;
    int lv_gardenOfTerrorGolemFrameAllyGolemTimerLabel;
    int lv_gardenOfTerrorGolemFrameEnemyGolemTimerLabel;
};

struct libUIUI_gs_NotificationDisplay {
    int lv_mainPanel;
    int lv_multikillTimerCountdownImage;
    int lv_multikillTimerTitleLabel;
    int lv_multikillTimerNumberLabel;
    int lv_coreNotificationTitle;
    int lv_coreNotificationSubLabel;
    int lv_enemyNotificationTitle;
    int lv_enemyNotificationSubLabel;
    int lv_tutorialNotificationTitle;
    int lv_tutorialNotificationSubLabel;
    int lv_singleKillNotificationTitle;
    int lv_singleKillNotificationSubLabel;
    int lv_doubleKillNotificationTitle;
    int lv_doubleKillNotificationSubLabel;
    int lv_tripleKillNotificationTitle;
    int lv_tripleKillNotificationSubLabel;
    int lv_quadKillNotificationTitle;
    int lv_quadKillNotificationSubLabel;
    int lv_megaKillNotificationTitle;
    int lv_megaKillNotificationSubLabel;
    int lv_megaKillNotificationTitle2;
    int lv_megaKillNotificationSubLabel2;
    int lv_megaKillNotificationSubLabel3;
};

struct libUIUI_gs_UIPartyFrame {
    int lv_mainPanel;
    int[libCore_gv_bALMaxTeams + 1] lv_teamHeroPanel;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroPanels;
    int[libCore_gv_bALMaxPlayers + 1][libCore_gv_dataHeroesMaxAlternateHeroes + 1] lv_heroPortraitImages;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroTargetFrames;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroStatusBarsDefault;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroStatusBarsOrange;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroStatusBarsYellow;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroStatusBarsPink;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroStatusBarsNoResource;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroStatusBarsRespawn;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroStatusBarsSeparateShields;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroStatusFrameHeroWithPet;
    int[libCore_gv_bALMaxPlayers + 1][libCore_gv_dataHeroesMaxAlternateHeroes + 1] lv_heroStatusBarsHeroWithPet;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroStatusFrameLostVikings;
    int[libCore_gv_bALMaxPlayers + 1][libCore_gv_dataHeroesMaxAlternateHeroes + 1] lv_heroStatusBarsLostVikings;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroHeroicTalentPanel;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroHeroicIcon;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroHeroicTalentReadyIcon;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroHeroicTalentProgressBar;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroHeroicCooldownLabel;
    string[libCore_gv_bALMaxPlayers + 1] lv_heroHeroicAbility;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroExtendedDeathIcon;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroCondensedDeathIcon;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroOnFireCutscene;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerBoostEffect;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroPartyButton;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroPartyButtonPetOwner;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroPartyButtonPet;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroPartyButtonA;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroPartyButtonB;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroPartyButtonC;
    unit[libCore_gv_bALMaxPlayers + 1][libCore_gv_dataHeroesMaxAlternateHeroes + 1] lv_heroUnits;
    timer[libCore_gv_bALMaxPlayers + 1] lv_heroPetDeathTimer;
    timer[libCore_gv_bALMaxPlayers + 1][libCore_gv_dataHeroesMaxAlternateHeroes + 1] lv_heroVikingsDeathTimers;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroDeathTimeOverlay;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroDeathTimeLabel;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroDeathTimePetLabel;
    int[libCore_gv_bALMaxPlayers + 1][libCore_gv_dataHeroesMaxAlternateHeroes + 1] lv_heroDeathTimeVikingsLabels;
    bool[libCore_gv_bALMaxPlayers + 1][libCore_gv_dataHeroesMaxAlternateHeroes + 1] lv_heroDeathRespawnReminderSent;
    bool[libCore_gv_bALMaxPlayers + 1] lv_heroDeathInSpecialDeathState;
    int lv_gameTimerLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_teamLevelInfoPanel;
    int[libCore_gv_bALMaxTeams + 1] lv_teamLevelLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_teamNextLevelTalentIcon;
    int[libCore_gv_bALMaxTeams + 1] lv_teamNextLevelNoTalentIcon;
    int[libCore_gv_bALMaxTeams + 1] lv_teamXPVeterancyBar;
    int[libCore_gv_bALMaxTeams + 1] lv_teamTalentAdvantageIcon;
    bool[libCore_gv_bALMaxTeams + 1] lv_teamHasHeroes;
    int[libCore_gv_bALMaxTeams + 1] lv_coreHealthUnitStatusFrames;
    int lv_coreHealthLabel;
    int lv_xPContributionClickableButton;
    int[libCore_gv_bALMaxTeams + 1] lv_xPContributionPopup;
    int[libCore_gv_bALMaxTeams + 1] lv_heroXPContributionLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_mercenaryXPContributionLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_minionXPContributionLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_passiveXPContributionLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_structureXPContributionLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_totalXPContributionLabel;
};

struct libUIUI_gs_PingTarget {
    string lv_unitType;
    bool lv_pingIsForOccupiedVehicle;
    text lv_targetNameOverride;
    text lv_textMessageAlliedTarget;
    text lv_textMessageEnemyTarget;
    soundlink lv_pingSoundAlliedTarget;
    soundlink lv_pingSoundEnemyTarget;
    int lv_heroVOLineAlliedTarget;
    int lv_heroVOLineEnemyTarget;
    int lv_heroVOLineHumanPingingPlayer;
    int lv_heroVOLineAIPingingPlayer;
    trigger lv_customPingResponseTrigger;
};

struct libUIUI_gs_PreloadPanel {
    int lv_dialog;
    int lv_mainPanel;
    int lv_backgroundImage;
};

struct libUIUI_gs_UITabScreenPanel {
    int lv_mainPanel;
    int lv_container;
    int lv_tabControl;
    int lv_closeButton;
    bool[libCore_gv_bALMaxEnginePlayerCount + 1] lv_mainPanelToggled;
    int lv_teamLevelLabelBlue;
    int lv_teamLevelLabelRed;
    int lv_teamKillsLabelBlue;
    int lv_teamKillsLabelRed;
};

struct libUIUI_gs_UITalentsChoicePanel {
    int lv_talentsPanel;
    int[libCore_gv_talents_MaxPrepickedTalentProfiles_C + 1] lv_buildButton;
    int[libCore_gv_dataHeroesMaxTalentsPerTier + 1] lv_talentButton;
    int[libCore_gv_dataHeroesMaxTalentsPerTier + 1] lv_talentIcon;
    int[libCore_gv_dataHeroesMaxTalentsPerTier + 1] lv_talentName;
    int[libCore_gv_dataHeroesMaxTalentsPerTier + 1] lv_talentHotkeyFrame;
    int[libCore_gv_dataHeroesMaxTalentsPerTier + 1] lv_talentHotkeyLabel;
    int[libCore_gv_dataHeroesMaxTalentsPerTier + 1] lv_tooltipNameLabel;
    int[libCore_gv_dataHeroesMaxTalentsPerTier + 1] lv_tooltipInfoLabel;
    int[libCore_gv_dataHeroesMaxTalentsPerTier + 1] lv_tooltipDescriptionLabel;
    int[libCore_gv_dataHeroesMaxTalentTiers + 1] lv_tierSelectionButton;
    int[libCore_gv_dataHeroesMaxTalentTiers + 1] lv_tierSelectionButtonIconFrame;
    int[libCore_gv_dataHeroesMaxTalentTiers + 1] lv_tierSelectionButtonIcon;
    int[libCore_gv_dataHeroesMaxTalentTiers + 1] lv_tierSelectionButtonQuestProgressBar;
    int lv_heroTalentTreeSelectionIndicatorContainer;
    int lv_heroTalentTreeSelectionToggleButton;
};

struct libUIUI_gs_UITalentsChoicePanelPlayer {
    int lv_selectedTier;
    bool lv_talentsPanelVisible;
};

struct libUIUI_gs_TeamStatusPanel {
    int lv_mainPanel;
    int[libCore_gv_bALMaxTeams + 1] lv_coreHealthBarFrames;
    int lv_topChevron;
    int lv_topChevronEmpty;
    int[libCore_gv_bALMaxTeams + 1] lv_teamColorBar;
    int lv_mapMechanicMainPanel;
    int lv_mapMechanicImage;
    int lv_mapMechanicImageTooltipFrame;
    int lv_mapMechanicLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_mapMechanicTeamPanel;
    int[libCore_gv_bALMaxTeams + 1] lv_mapMechanicTeamLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_mapMechanicTeamLabelTooltipFrame;
    int[libCore_gv_bALMaxTeams + 1][3] lv_mapMechanicTeamImages;
    int lv_mapMechanicActivePanel;
    int lv_mapMechanicActiveImage;
    int lv_mapMechanicActiveImageTooltipFrame;
    int lv_mapMechanicActiveLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_mapMechanicActiveTeamPanel;
    int[libCore_gv_bALMaxTeams + 1] lv_mapMechanicActiveTeamLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_mapMechanicActiveTeamSubLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_mapMechanicActiveTeamImage;
    int[libCore_gv_bALMaxTeams + 1] lv_mapMechanicActiveTeamImageBG;
    int[libCore_gv_bALMaxTeams + 1] lv_mapMechanicActiveTeamHPBar;
    int[libCore_gv_bALMaxTeams + 1] lv_mapMechanicActiveTeamHPBarLabel;
};

// Variable Declarations
timer libUIUI_gv_uITimeLabelUpdateTimer;
fixed[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_lastUsedDialogItemTime;
libUIUI_gs_UIDamageFlashUI libUIUI_gv_uIDamageFlashUI;
fixed libUIUI_gv_uIDamageFlashLowHPThreshold;
bool libUIUI_gv_uIDebugPanelForceMinionWaveComp;
int libUIUI_gv_uIDebugPanelForcedMinionWaveCompIndex;
libUIUI_gs_DeathRecapPanel libUIUI_gv_deathRecapPanel;
fixed libUIUI_gv_uICombatFloatingElementsRemoveDelayTicks;
bool libUIUI_gv_uICombatFloatingElementsSuppressLeashingText;
timer[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_fullscreenOverlaysSpecialOverlayHideTimer;
timer[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_fullscreenOverlaysDeathOverlayHideTimer;
libUIUI_gs_FullscreenOverlaysPanel libUIUI_gv_fullscreenOverlaysPanel;
libUIUI_gs_FullscreenOverlayPanelRework libUIUI_gv_fullscreenOverlaysPanelRework;
libUIUI_gs_FullscreenOverlayQueue[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_fullscreenOverlayQueue;
libUIUI_gs_GameOverSplash libUIUI_gv_gameOverSplash;
libUIUI_gs_UIGameUIHandles libUIUI_gv_uIGameUIHandles;
bool libUIUI_gv_uIGameUIVisibility;
libUIUI_gs_HealingFountainHelperTags[libCore_gv_bALMaxPlayers + 1][libUIUI_gv_uI_HealingFountainsHelpText_ArraySize_C + 1] libUIUI_gv_uIHealingFountainsHelpText;
bool[libCore_gv_bALMaxPlayers + 1] libUIUI_gv_uIHealingFountainsHelpTextHasFountainBeenUsed;
bool[libCore_gv_bALMaxPlayers + 1] libUIUI_gv_uIHealingFountainsHelpTextTextShowing;
bool[libCore_gv_bALMaxPlayers + 1] libUIUI_gv_uIHealingFountainsHelpTextCooldownShowing;
libUIUI_gs_UIHeroConsole libUIUI_gv_uIHeroConsole;
libUIUI_gs_HeroConsoleUnitStatusBars libUIUI_gv_heroConsoleUnitStatusBars;
bool[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_heroConsoleUnitStatusBars_PlayerIsCasting;
unit[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_heroConsoleUnitStatusBars_CurrentUnitForPlayer;
string[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_heroConsoleUnitStatusBars_StunDeathBarCurrentBehaviorForPlayer;
string[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_heroConsoleUnitStatusBars_BehaviorChannelBarCurrentBehaviorForPlayer;
libUIUI_gs_UIHeroLeaderboard libUIUI_gv_uIHeroLeaderboard;
int libUIUI_gv_uIHeroLeaderboardSortButton;
int[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_uIHeroLeaderboardSortingPlayerCurrentSort;
fixed[libCore_gv_bALMaxTeams + 1][libUIUI_gv_uIHeroLeaderboardMaxSortingButtons + 1][libCore_gv_bALMaxTeams + 1] libUIUI_gv_uIHeroLeaderboardSortingBestValueOfSort;
string[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] libUIUI_gv_heroSelectionCurateHeroSelections;
bool[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_heroSelectionPairedHeroForm;
libUIUI_gs_HeroSelection libUIUI_gv_heroSelection;
libUIUI_gs_HeroSelectionSetting libUIUI_gv_heroSelectionSetting;
libUIUI_gs_HSUILoadout libUIUI_gv_hSUILoadout;
libUIUI_gs_HSUILoadoutPlayer[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_hSUILoadoutPlayer;
libUIUI_gs_UIHeroStatusFrame[libCore_gv_bALMaxPlayers + 1] libUIUI_gv_uIHeroStatusFrames;
libUIUI_gs_UIHeroTrackerArrows libUIUI_gv_uIHeroTrackerArrows;
bool[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_inputClearText;
libUIUI_gs_JCIInfo[libMapM_gv_jungleMaxCamps + 1] libUIUI_gv_jCIInfo;
int libUIUI_gv_killLogPanel;
libUIUI_gs_KillLogItem[libUIUI_gv_killLogMaxItemCountD0A1 + 1] libUIUI_gv_killLogItems;
libUIUI_gs_KillLogQuestArray[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_killLogQuestResetCache;
libUIUI_gs_KillLogDebugPanel libUIUI_gv_killLogDebugPanel;
libUIUI_gs_MapMechanicsPanel libUIUI_gv_mapMechanicsPanel;
timer libUIUI_gv_mapMechanicsBlackheartsBayChestsSpawnedFrameTimer;
int libUIUI_gv_mapMechanicsBlackheartsBayCurrentMode;
int[libCore_gv_bALMaxTeams + 1] libUIUI_gv_mapMechanicsGardenOfTerrorLastSeedFrameStatus;
bool[libCore_gv_bALMaxTeams + 1] libUIUI_gv_mapMechanicsGardenOfTerrorGolemSummonPossible;
int[libCore_gv_bALMaxTeams + 1] libUIUI_gv_mapMechanicsGardenOfTerrorSeedStatusTextFlashLevel;
libUIUI_gs_NotificationDisplay libUIUI_gv_notificationDisplay;
timer libUIUI_gv_partyFrameDeathUpdateTimer;
int[libCore_gv_bALMaxTeams + 1] libUIUI_gv_teamXPPartyFrameTeamTalentTier;
int[libCore_gv_bALMaxTeams + 1] libUIUI_gv_uIPartyFrameMaxLevelForTeam;
int[libCore_gv_bALMaxTeams + 1] libUIUI_gv_teamXPPartySpamCounter;
timer[libCore_gv_bALMaxTeams + 1] libUIUI_gv_teamXPPartySpamLockoutTimer;
timer[libCore_gv_bALMaxTeams + 1] libUIUI_gv_teamXPPartyFrameDecrementPingCountTimer;
libUIUI_gs_UIPartyFrame libUIUI_gv_uIPartyFrame;
timer[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_pingInputSuppressionTimer;
timer[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_pingLockoutTimer;
timer[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_pingCountResetTime;
int[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_pingCount;
int[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_pingPlayerHearthstonePing;
timer[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_hearthPingTextLockoutTimer;
timer[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_uIOnMyWayPingPathDisplayTimer;
libUIUI_gs_PingTarget[libUIUI_gv_uIPingTargetMaxCount_C + 1] libUIUI_gv_pingPingTarget;
int libUIUI_gv_pingTargetCount;
libUIUI_gs_PreloadPanel libUIUI_gv_preloadPanel;
libUIUI_gs_UITabScreenPanel libUIUI_gv_uITabScreenPanel;
int[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_uITalentsPrepickedSelectedBuild;
libUIUI_gs_UITalentsChoicePanel libUIUI_gv_uITalentsChoicePanel;
libUIUI_gs_UITalentsChoicePanelPlayer[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_uITalentsChoicePanelPlayer;
libUIUI_gs_TeamStatusPanel libUIUI_gv_teamStatusPanel;

// Function Declarations
void libUIUI_gf_HotkeySetDialogItemAbilityTalentHotkeyColorTypeForPlayer (int lp_hotkeyDialogItem, int lp_hotkeyType, int lp_player);
void libUIUI_gf_HotkeySetDialogItemAbilityTalentHotkeyColorTypeForPlayerGroup (int lp_hotkeyDialogItem, int lp_hotkeyType, playergroup lp_playerGroup);
void libUIUI_gf_HotkeySetDialogItemAbilityTalentHotkeyTypeForPlayer (int lp_hotkeyType, int lp_hotkeyDialogItem, int lp_player);
void libUIUI_gf_HotkeySetDialogItemAbilityTalentHotkeyTypeForPlayerGroup (int lp_hotkeyType, int lp_hotkeyDialogItem, playergroup lp_playerGroup);
void libUIUI_gf_UIUpdateTimeLabels ();
void libUIUI_gf_UISetDialogItemToSelectedOrObserved (int lp_dialogItem);
void libUIUI_gf_UIShowHideStormGameUIAndWorldForPlayer2 (bool lp_showHide, int lp_player);
void libUIUI_gf_UIShowHideStormGameUIAndWorldForPlayer (bool lp_showHide, int lp_player);
void libUIUI_gf_UpdateLastUsedDialogItemTimeForPlayer (int lp_player);
fixed libUIUI_gf_GetLastUsedDialogItemTime (int lp_player);
bool libUIUI_gf_CanUseDialogItemTime (int lp_player);
void libUIUI_gf_InitPathingLines (unit lp_unit, int lp_player);
void libUIUI_gf_UIDamageFlashStartLowHPSoundAndScreenEffects (int lp_player);
void libUIUI_gf_UIDamageFlashStopLowHPSoundAndScreenEffects (int lp_player);
void libUIUI_gf_UILowHPSetSoundChannelsForLowHealth (int lp_player);
void libUIUI_gf_UILowHPSetSoundChannelsForSilence (int lp_player);
void libUIUI_gf_UILowHPSetSoundChannelsForNormal (int lp_player);
void libUIUI_gf_DeathRecapShowHideForPlayer (bool lp_showHide, int lp_player);
void libUIUI_gf_DeathRecapShowHideToastButtonForPlayer (bool lp_showHide, int lp_player);
text libUIUI_gf_DeathRecapCreateTooltipTextNoSentence (int lp_deadPlayer, int lp_effectIndex);
void libUIUI_gf_DeathRecapPopulateEffectInstancesForAbilitiesPanel (int lp_deadPlayer);
void libUIUI_gf_DeathRecapPopulateAbilityandHeroDataForAbilitiesPanel (int lp_deadPlayer);
void libUIUI_gf_DeathRecapPopulateHighestDamagersForPlayer (int lp_deadPlayer);
void libUIUI_gf_DeathRecapPopulateHighestDamagersAbilities (int lp_deadPlayer, int lp_highestDamager, int lp_highestDamagerAbilities);
void libUIUI_gf_UICombatFloatingElementsDamage (unit lp_triggeringUnit, unit lp_damagingUnit, string lp_damagingEffect, fixed lp_amount);
void libUIUI_gf_UICombatFloatingElementsLeashing (unit lp_unit);
int libUIUI_gf_UICombatFloatingElementsUnitDialog (unit lp_unit);
int libUIUI_gf_UICombatFloatingElementsUnitDialogAnchorItem (unit lp_unit);
unit libUIUI_gf_UICombatFloatingElementsUnitDialogUnit (unit lp_unit);
void libUIUI_gf_UICombatFloatingElementsCreateTextTagatPointForPlayers (point lp_displayPoint, text lp_displayText, string lp_style, int lp_direction, playergroup lp_displayPlayers, int lp_yOffset, string lp_animationSpeed, bool lp_thread);
void libUIUI_gf_UICombatFloatingElementsCreateTextTagatUnitForPlayers (unit lp_displayUnit, text lp_displayText, string lp_style, int lp_direction, playergroup lp_displayPlayers, int lp_yOffset, string lp_animationSpeed, bool lp_thread);
void libUIUI_gf_UICombatFloatingElementsCreateQuestTagatPointForPlayerGroup (point lp_displayPoint, playergroup lp_displayPlayers);
void libUIUI_gf_UICombatFloatingElementsCreateQuestTagatPointForPlayerGroupThread (point lp_displayPoint, playergroup lp_displayPlayers);
void libUIUI_gf_UICombatFloatingElementsCreateTextTagatPointForPlayerGroup (point lp_displayPoint, text lp_displayText, string lp_style, int lp_direction, playergroup lp_displayPlayers, int lp_yOffset, string lp_animationSpeed);
void libUIUI_gf_UICombatFloatingElementsCreateTextTagatPointForPlayerGroupThread (point lp_displayPoint, text lp_displayText, string lp_style, int lp_direction, playergroup lp_displayPlayers, int lp_yOffset, string lp_animationSpeed);
void libUIUI_gf_UICombatFloatingElementsCreateTextTagatPointForPlayerGroupNEW (point lp_displayPoint, text lp_displayText, string lp_style, int lp_direction, playergroup lp_displayPlayers, int lp_yOffset, string lp_animationSpeed);
void libUIUI_gf_UICombatFloatingElementsCreateTextTagatPointForPlayerGroupNEWThread (point lp_displayPoint, text lp_displayText, string lp_style, int lp_direction, playergroup lp_displayPlayers, int lp_yOffset, string lp_animationSpeed);
void libUIUI_gf_UICombatFloatingElementsCreateTextTagatUnitForPlayerGroupSpecial (unit lp_displayUnit, text lp_displayText, string lp_style, int lp_direction, playergroup lp_displayPlayers, int lp_yOffset, string lp_animationSpeed);
void libUIUI_gf_UICombatFloatingElementsCreateTextTagatUnitForPlayerGroupSpecialThread (unit lp_displayUnit, text lp_displayText, string lp_style, int lp_direction, playergroup lp_displayPlayers, int lp_yOffset, string lp_animationSpeed);
void libUIUI_gf_UICombatFloatingElementsApplyDirection (int lp_frame, int lp_direction);
void libUIUI_gf_UICombatFloatingElementsApplyDirectionWithSpeed (int lp_frame, int lp_direction, playergroup lp_displayPlayers, string lp_animationSpeed);
void libUIUI_gf_UICombatFloatingElementsApplyAnimation (int lp_frame, string lp_style, playergroup lp_displayPlayers, string lp_animationSpeed);
void libUIUI_gf_UIFloatingCombatTextCreateTextTag (unit lp_displayUnit, text lp_displayText, playergroup lp_displayPlayers, string lp_style, fixed lp_duration, fixed lp_heightOffset, fixed lp_horizontalOffset);
void libUIUI_gf_UIFloatingCombatTextCreateTextTagDirectional (unit lp_displayUnit, text lp_displayText, playergroup lp_displayPlayers, string lp_style, fixed lp_duration, fixed lp_heightOffset, fixed lp_horizontalOffset);
void libUIUI_gf_UIFloatingCombatTextCreateQuestTag (unit lp_displayUnit, playergroup lp_displayPlayers);
void libUIUI_gf_FullscreenOverlaysShowHideDeathOverlay (bool lp_showHide, int lp_player);
void libUIUI_gf_FullscreenOverlaysStopSpecialOverlay (int lp_player);
void libUIUI_gf_FullscreenOverlaysShowSpecialOverlay (string lp_cutscene, int lp_player);
void libUIUI_gf_FullscreenOverlaysCreateCCEffectFlashForPlayer (int lp_player, fixed lp_cCDuration);
void libUIUI_gf_FullscreenOverlayAddItemForPlayer (int lp_player, int lp_priority, string lp_cutscene, string lp_behavior);
void libUIUI_gf_FullscreenOverlayInsertItemIntoQueueForPlayer (int lp_player, int lp_priority, int lp_desiredInsertPosition, string lp_cutscene, string lp_behavior);
void libUIUI_gf_FullscreenOverlayRemoveItemFromQueueForPlayer (int lp_player, string lp_cutscene, string lp_behavior);
void libUIUI_gf_FullscreenOverlayStopandClearCutsceneQueueForPlayer (int lp_player);
void libUIUI_gf_FullscreenOverlayPlayCutscene (int lp_player, string lp_cutscene);
void libUIUI_gf_GameOverSplashDisplayForAllPlayers (int lp_winningTeam);
void libUIUI_gf_GameOverSplashShowHideForAllPlayers (bool lp_showHide, int lp_winningTeam);
void libUIUI_gf_UIGameUIToggleMinimapCommandsForPlayer (int lp_player);
void libUIUI_gf_UIGameUIChangeModeMinimapCommandsForPlayer (int lp_player);
void libUIUI_gf_UIGameUITurnOnFactionStateForPlayer (int lp_faction, int lp_player);
void libUIUI_gf_UIHealingFountainsHelpTextCreateTextTagsForTeam (int lp_team);
void libUIUI_gf_UIHealingFountainsHelpTextShowHideForPlayer (int lp_player, bool lp_showHide);
void libUIUI_gf_UIHeroConsoleShowHideForPlayer (bool lp_showHide, int lp_player);
void libUIUI_gf_UIHeroConsoleShowHideUnitStatusFrameForPlayer (bool lp_showHide, int lp_player);
void libUIUI_gf_UIHeroConsoleShowHideUnitStatusFrameForPlayer2 (bool lp_showHide, int lp_player);
void libUIUI_gf_UIHeroConsoleSetUpForPlayer (int lp_player, unit lp_unit);
void libUIUI_gf_UIHeroConsoleSetUnitStatusForPlayer (int lp_unitStatus, int lp_player);
int libUIUI_gf_UIHeroConsoleUnitStatusFrameOfUnit (unit lp_unit);
void libUIUI_gf_HeroConsoleUnitStatusBarsUpdateStunDeathBar (string lp_newBehavior, unit lp_heroUnit);
void libUIUI_gf_HeroConsoleUnitStatusBarsSetUnitForBars (unit lp_unit, int lp_player);
void libUIUI_gf_HeroConsoleUnitStatusBarsUpdateForPlayer (int lp_player);
void libUIUI_gf_UIHeroLeaderboardSetUpPlayeronLeaderboard (int lp_player);
void libUIUI_gf_UIHeroLeaderboardSortingChangeState (int lp_player, int lp_sortingType);
void libUIUI_gf_UIHeroLeaderboardSortingSetDefaultState (int lp_triggeringPlayer);
void libUIUI_gf_UIHeroLeaderboardSortingSetNonDefaultState (int lp_triggeringPlayer, int lp_sortingType);
void libUIUI_gf_UIHeroLeaderboardSortingDoSorting (int lp_player);
void libUIUI_gf_UIHeroLeaderboardSortingMoveSortedPlayerToSlot (int lp_triggeringPlayer, int lp_slotIndex, int lp_sortedPlayer);
void libUIUI_gf_UIHeroLeaderboardSortingChangeButtonAvailability (int lp_player, int lp_sortingType);
string libUIUI_gf_UIHeroLeaderboardSortingGetStringKADValueForPlayer (int lp_player, fixed lp_value);
void libUIUI_gf_UIHeroLeaderboardSortingChangeBestValueTypeOfFrameForPlayer (int lp_bestValueType, int lp_dialogItem, int lp_triggeringPlayer);
void libUIUI_gf_UIHeroLeaderboardSortingCalculateBestSortingPlayerForBothTeams ();
void libUIUI_gf_UIHeroLeaderboardSortingUpdateBestValueOfSortedPlayer (int lp_dialogItem, int lp_sortingType, int lp_triggeringPlayer, int lp_sortedPlayer);
void libUIUI_gf_UIHeroLeaderboardTalentsSetupStartQuestOfPlayer (int lp_player);
void libUIUI_gf_UIHeroLeaderboardTalentsUpdateTalentTierOfPlayer (int lp_targetPlayer, int lp_talentTier);
void libUIUI_gf_UIHeroLeaderboardTalentsUpdateTalentsAvailabilityOfPlayer (int lp_player);
void libUIUI_gf_UIHeroLeaderboardTalentsUpdateTalentsQuestsOfPlayer (int lp_player);
void libUIUI_gf_UIHeroLeaderboardTalentsSetTalentTierStateOfPlayer (int lp_targetPlayer, string lp_talentTierState, int lp_talentTier);
void libUIUI_gf_UIHeroLeaderboardTalentsSetTalentTierQuestStateOfPlayer (int lp_targetPlayer, int lp_talentTier, string lp_talentTierQuestState);
void libUIUI_gf_UIHeroLeaderboardTalentsSetTalentTierQuestProgressOfPlayer (int lp_currentValue, int lp_maxValue, int lp_targetPlayer, int lp_talentTier);
void libUIUI_gf_HSEnableDisableHeroButtonForPlayerGroup (bool lp_enableDisable, int lp_row, int lp_column, playergroup lp_playerGroup, bool lp_desaturated);
void libUIUI_gf_HeroSelectionSelectHeroForPlayer (int lp_player, int lp_heroRow, int lp_heroCol);
int libUIUI_gf_HeroSelectionSelectRandomHeroForPlayer (int lp_player);
bool libUIUI_gf_HeroSelectionHeroSelectedByTeam (int lp_heroIndex, int lp_team);
bool libUIUI_gf_HSUIGoodToLockIn (int lp_player);
void libUIUI_gf_lockunlockherochoise (int lp_player, bool lp_lockUnlock);
bool libUIUI_gf_HSUIAllPlayersLockedIn ();
void libUIUI_gf_HSUIUpdateHeroButtons ();
int libUIUI_gf_HSUIGetCellState (int lp_viewer, int lp_row, int lp_col, int lp_team);
void libUIUI_gf_HSUIUpdateTeamPanel ();
string libUIUI_gf_HSUIGetHeroRoleIcon (int lp_row, int lp_col);
void libUIUI_gf_HSUIUpdateAbilitiesPanelforPlayer (int lp_player, bool lp_choosePaired);
void libUIUI_gf_HSUIUpdateAbilityToVariationForPlayer (int lp_player, int lp_newVariation, string lp_heroAbilitySlot);
void libUIUI_gf_HSUIUpdateAbilityToVariationForPlayerSimple (int lp_player, int lp_newVariation, string lp_heroAbilitySlot);
void libUIUI_gf_HSUIUpdateTalentsOfTierForPlayer (int lp_player, int lp_talentTier);
void libUIUI_gf_HSUIUpdateTalentsTierNumbersForPlayer (int lp_player);
void libUIUI_gf_HSUIUpdatePairedSelectionForPlayer (int lp_player, int lp_pairedSelectedPortraitNumber);
void libUIUI_gf_HSUIShowHeroSelectionUI ();
void libUIUI_gf_HSUIShowCalloutsDuringHeroSelectionCountdown (timer lp_timer);
void libUIUI_gf_HSUILoadoutInitialization (int lp_parentPanel);
int libUIUI_gf_HSUILoadoutGetMaxLaneCount (int lp_maxItemsCount, int lp_itemsPerLane, int lp_panel);
void libUIUI_gf_HSUISetScrollBarValueForPlayer (int lp_scrollBar, fixed lp_value, int lp_player);
void libUIUI_gf_HSUISetScrollBarMaxMinValuesForPlayer (int lp_scrollBar, fixed lp_valueMin, fixed lp_valueMax, int lp_player);
void libUIUI_gf_HSUIVariationsFillVariationDataForPlayer (int lp_player);
void libUIUI_gf_HSUIVariationsUpdateEditBoxNameForPlayer (int lp_player);
void libUIUI_gf_HSUIVariationsSelectVariationForPlayer (int lp_variation, int lp_player);
bool libUIUI_gf_HSUISkinsSkinItemButtonIsSelectedForPlayer (int lp_player, int lp_item);
bool libUIUI_gf_HSUISkinsCompareSearchTextForPlayer (int lp_skin, int lp_player);
void libUIUI_gf_HSUISkinsSetLoadoutSkinItemToSkinForPlayer (int lp_skinIndex, int lp_dialogItemIndex, int lp_player);
void libUIUI_gf_HSUISkinsFillLoadoutSkinDataForPlayer (int lp_player);
void libUIUI_gf_HSUISkinsFillTempArrayForPlayer (int lp_player);
void libUIUI_gf_HSUISkinsAddSkinToTempArrayForPlayer (int lp_skinIndex, int lp_player);
bool libUIUI_gf_HSUIMountsMountItemButtonIsSelectedForPlayer (int lp_player, int lp_item);
bool libUIUI_gf_HSUIMountsMountIsInTempArrayForPlayer (int lp_mountIndex, int lp_player);
bool libUIUI_gf_HSUIMountsCollapsedForPlayer (int lp_player);
int libUIUI_gf_HSUIMountsCurrentMaxItemCountForPlayer (int lp_player);
bool libUIUI_gf_HSUIMountsCompareSearchTextForPlayer (int lp_mount, int lp_player);
int libUIUI_gf_HSUIMountsMountCountOfCategoryForHeroPlayer (int lp_player, string lp_requiredCategory);
int libUIUI_gf_HSUIMountsCollectionCategoryIndexForSelectedMountForPlayer (int lp_player);
void libUIUI_gf_HSUISetMountCategoryItemTextForPlayer (int lp_dialogItem, text lp_text, int lp_player);
void libUIUI_gf_HSUISetLoadoutMountItemToMountForPlayer (int lp_mountIndex, int lp_dialogItemIndex, int lp_player);
void libUIUI_gf_HSUIMountsFillLoadoutMountDataForPlayer (int lp_player);
void libUIUI_gf_HSUIMountsFillTempArrayForPlayer (int lp_categoryButtonIndex, int lp_player);
void libUIUI_gf_HSUIMountsFillTempCollectionCategoryArrayForPlayer (int lp_player);
void libUIUI_gf_HSUIMountsAddMountToTempArrayForPlayer (int lp_categoryButtonIndex, int lp_mountIndex, int lp_player);
bool libUIUI_gf_HSUIMountsFillTempArrayMountIsValidForPlayer (int lp_categoryButtonIndex, int lp_mountIndex, int lp_player);
void libUIUI_gf_HSUIMountsUpdateMountCollectionCategoryButtonsForPlayer (int lp_player);
void libUIUI_gf_HSUIMountsFillMountReplacementContainerForPlayer (int lp_player);
void libUIUI_gf_HSUISetSkinContainerNameForPlayer (int lp_player);
void libUIUI_gf_HSUISetMountContainerNameForPlayer (int lp_player);
void libUIUI_gf_HSUIButtonItemSelectDeselectButtonForPlayer (bool lp_selectDeselect, int lp_dialogItem, int lp_player);
void libUIUI_gf_HSUIButtonItemLockUnlockButtonForPlayer (bool lp_lockedUnlocked, int lp_dialogItem, int lp_player);
void libUIUI_gf_HSUIButtonItemActivateEventAtButtonForPlayer (string lp_event, int lp_button, int lp_player);
void libUIUI_gf_HSUIButtonItemSetSupporterTypeAtButtonForPlayer (string lp_supporter, int lp_button, int lp_player);
void libUIUI_gf_HSUIButtonItemSetF2PStateAtButtonForPlayer (bool lp_f2P, int lp_dialogItem, int lp_player);
void libUIUI_gf_HSUIButtonItemActivateVariationIndexAtItemForPlayer (int lp_variationNumber, int lp_dialogItem, int lp_player);
void libUIUI_gf_HSUILoadBankDataForPlayer (int lp_player);
void libUIUI_gf_HSUILoadBankDataForSelectedVariationForPlayer (int lp_player);
void libUIUI_gf_HSUISetNewSelectedLoadoutPanelForPlayer (int lp_panel, int lp_player);
void libUIUI_gf_HSUIFillLoadoutPanelForPlayer (int lp_player);
void libUIUI_gf_HSUIFillLoadoutSkinPanelForPlayer (int lp_player);
void libUIUI_gf_HSUIFillLoadoutMountPanelForPlayer (int lp_player);
void libUIUI_gf_HSUIUpdateLoadoutPanelOnVariationSelectionForPlayer (int lp_player);
void libUIUI_gf_HSUIUpdatePurchaseInfoPanelForPlayer (int lp_player);
void libUIUI_gf_UIUnitStatusFramesShowUnitNameLabelForUnit (unit lp_unit);
void libUIUI_gf_UIUnitStatusFramesHookupUnitStatusFramesForPlayer (int lp_player);
void libUIUI_gf_UIUnitStatusFramesShowHideBotLabel (int lp_player, bool lp_showHide);
void libUIUI_gf_UIHeroTrackerArrowShowHideForPlayer (bool lp_showHide, int lp_player);
void libUIUI_gf_UIHeroTrackerArrowShowHideHeroUnitForPlayer (bool lp_showHide, int lp_player, unit lp_unit);
void libUIUI_gf_UIHeroTrackerArrowHookupTrackerArrowsForPlayer (int lp_player);
void libUIUI_gf_JCIInitialization (int lp_campNumber, bool lp_elite);
void libUIUI_gf_JCIChangeOwner (int lp_newPlayer, int lp_newAIOwner, int lp_campNumber);
void libUIUI_gf_JCISetRespawnLabelTextForCamp (int lp_camp, text lp_text);
void libUIUI_gf_JCISetPlayerNameLabelText (int lp_camp, text lp_text);
void libUIUI_gf_JCISetDebugLabelText (int lp_camp, text lp_text);
void libUIUI_gf_JCISetCampDescriptionLabelText (int lp_campNumber, text lp_text, bool lp_isElite);
void libUIUI_gf_JCISetCampTitleLabelText (int lp_camp, text lp_text);
void libUIUI_gf_JCISetCampTimerLabelText (int lp_camp, text lp_text);
int libUIUI_gf_KillLogGetUnusedItemIndex ();
int libUIUI_gf_KillLogGetItemIndexForUnit (int lp_sourcePlayer, int lp_type);
int libUIUI_gf_KillLogGetItemWithLeastRemainingTime ();
string libUIUI_gf_KillLogGetPortraitPathForUnit (unit lp_unit);
int libUIUI_gf_KillLogAddNewItem (int lp_sourcePlayer, int lp_eventType);
void libUIUI_gf_KillLogAnnounceKill (int lp_sourcePlayer, unit lp_target);
void libUIUI_gf_KillLogAnnounceQuestCompletion (int lp_player, string lp_questToken, fixed lp_progress);
void libUIUI_gf_KillLogSaveQuestResetDataToCache (int lp_player, string lp_quest);
void libUIUI_gf_KillLogDisplayQuestResetDataFromCache (int lp_player, int lp_portraitFrame);
void libUIUI_gf_KillLogHideItem (int lp_indexToRemove);
void libUIUI_gf_KillLogDebugInitPanel ();
string libUIUI_gf_KillLogDebugRandomQuestBehavior ();
void libUIUI_gf_MapMechanicsRavenCourtShowHidePanel (bool lp_showHide);
void libUIUI_gf_MapMechanicsRavenCourtSetModeForTeam (int lp_mode, int lp_teamThatWonTheCurse);
void libUIUI_gf_MapMechanicsRavenCourtSetTributeCountForTeam (int lp_count, int lp_team);
void libUIUI_gf_MapMechanicsRavenCourtSetRemainingCurseTimeForTeam (int lp_remainingSeconds, int lp_team);
void libUIUI_gf_MapMechanicsRavenCourtSetRemainingTributeSpawnTime (int lp_remainingSeconds);
void libUIUI_gf_MapMechanicsBlackheartsBayShowHidePanel (bool lp_showHide);
void libUIUI_gf_MapMechanicsBlackheartsBaySetMode (int lp_mode);
void libUIUI_gf_MapMechanicsBlackheartsBayShowChestsSpawnedFrame ();
void libUIUI_gf_MapMechanicsBlackheartsBayShowCannonballForTeam (int lp_team);
void libUIUI_gf_MapMechanicsBlackheartsBaySetDoubloonCountForTeam (int lp_count, int lp_maxCount, int lp_team);
void libUIUI_gf_MapMechanicsBlackheartsBaySetShotCountForTeam (int lp_count, int lp_team);
void libUIUI_gf_MapMechanicsHauntedMinesShowHidePanel (bool lp_showHide);
void libUIUI_gf_MapMechanicsHauntedMinesSetMode (int lp_mode);
void libUIUI_gf_MapMechanicsHauntedMinesSetRemainingMinesWarningTime (int lp_remainingSeconds);
void libUIUI_gf_MapMechanicsHauntedMinesSetSkullCountForTeam (int lp_count, int lp_team);
void libUIUI_gf_MapMechanicsHauntedMinesSetSkullsRemaining (int lp_count);
void libUIUI_gf_MapMechanicsHauntedMinesSetUpGolemForTeam (unit lp_golemUnit, int lp_skullCount, int lp_team);
void libUIUI_gf_MapMechanicsHauntedMinesSetUpGolemForObserver (unit lp_golemUnitTeamBlue, unit lp_golemUnitTeamRed, int lp_skullCountTeamBlue, int lp_skullCountTeamRed);
void libUIUI_gf_MapMechanicsDragonShireShowHidePanel (bool lp_showHide);
void libUIUI_gf_MapMechanicsDragonShireSetMode (int lp_mode);
void libUIUI_gf_MapMechanicsDragonShireSetRemainingShrineWarningTime (int lp_remainingSeconds);
void libUIUI_gf_MapMechanicsDragonShireSetStarShrineOwner (int lp_team);
void libUIUI_gf_MapMechanicsDragonShireSetMoonShrineOwner (int lp_team);
void libUIUI_gf_MapMechanicsDragonShireSetRemainingDragonTime (int lp_remainingSeconds);
void libUIUI_gf_MapMechanicsDragonShireSetUpDragonForTeam (unit lp_dragonUnit, int lp_team);
void libUIUI_gf_MapMechanicsGardenOfTerrorInit (int lp_parentPanel);
void libUIUI_gf_MapMechanicsGardenOfTerrorShowHidePanel (bool lp_showHide);
void libUIUI_gf_MapMechanicsGardenOfTerrorShowHideNightWarning (bool lp_showHide);
void libUIUI_gf_MapMechanicsGardenOfTerrorSetNightWarningTime (int lp_remainingSeconds);
void libUIUI_gf_MapMechanicsGardenOfTerrorSetGolemSummonPossibleForTeam (int lp_team, bool lp_summonPossible);
void libUIUI_gf_MapMechanicsGardenOfTerrorSetSeedCountForTeam (text lp_countText, int lp_team, bool lp_golemSummonPossible);
void libUIUI_gf_MapMechanicsGardenOfTerrorSetSeedFrameImageForTeam (int lp_team, bool lp_golemSummonPossible);
void libUIUI_gf_MapMechanicsGardenOfTerrorShowHideGolemFrame (bool lp_showHide);
void libUIUI_gf_MapMechanicsGardenOfTerrorSetUpGolemStatusBarForTeam (unit lp_golemUnit, int lp_team);
void libUIUI_gf_MapMechanicsGardenOfTerrorSetGolemRemainingTimeForTeam (int lp_team, int lp_remainingTime);
void libUIUI_gf_MapMechanicsGardenOfTerrorSetGolemGrowTimeForTeam (int lp_team, int lp_remainingTime);
void libUIUI_gf_MapMechanicsGardenOfTerrorSetGolemStatusTextForTeam (int lp_team, int lp_status);
void libUIUI_gf_MapMechanicsGardenOfTerrorSetSeedFrameStatusTextForTeam (int lp_team, int lp_status);
void libUIUI_gf_MapMechanicsGardenOfTerrorFlashSeedFrameStatusText (int lp_team, bool lp_flash, int lp_level);
void libUIUI_gf_NotificationDisplaySetMultikillTimerLabelsForPlayer (int lp_player, text lp_titleText, text lp_numberText);
int libUIUI_gf_UIPartyFrameHeroTypeofHero (unit lp_hero);
int libUIUI_gf_UIPartyFrameUIIndexofHeroUnit (unit lp_heroUnit, int lp_player);
int libUIUI_gf_UIPartyFrameGetHeroResourceTypeForPartyFrame (string lp_heroUnitType);
bool libUIUI_gf_UIPartyFrameSpecialCaseHeroHasHeroicatStart (unit lp_hero);
bool libUIUI_gf_UIPartyFrameSpecialCaseHeroUsesPairedRespawnTimer (unit lp_heroUnit);
timer libUIUI_gf_UIPartyFrameSpecialCaseHeroPairedRespawnTimer (int lp_player);
timer libUIUI_gf_UIPartyFrameDeathTimer (int lp_player, unit lp_heroUnit);
bool libUIUI_gf_UIPartyFrameSpecialCaseHeroHasExtendedDeath (int lp_player);
bool libUIUI_gf_UIPartyFrameSpecialCaseHeroHasCondensedDeath (unit lp_hero);
bool libUIUI_gf_UIPartyFrameSpecialCaseHeroTalentLevelsAreDifferent (unit lp_hero);
bool libUIUI_gf_UIPartyFrameSpecialCaseHeroHasHeroicCoolup (string lp_hero);
fixed libUIUI_gf_UIPartyFrameAbilityCooldownTime (unit lp_unit, string lp_ability, int lp_player);
void libUIUI_gf_UIPartyFrameShowHidePartyFramePanelForPlayer (bool lp_showHide, int lp_player);
void libUIUI_gf_UIPartyFrameShowHideHeroicAbility (bool lp_showHide, int lp_player);
void libUIUI_gf_UIPartyFrameHeroicTalentUpdate (int lp_player, int lp_talentTierIndex);
void libUIUI_gf_UIPartyFrameAddPlayerToPartyFrame (int lp_player);
void libUIUI_gf_UIPartyFrameHeroicAbilitySet (string lp_heroicAbility, int lp_player);
void libUIUI_gf_UIPartyFrameHeroicTalentIconSet (string lp_icon, int lp_player);
void libUIUI_gf_UIPartyFrameHeroicAbilityIconUpdate (int lp_player);
void libUIUI_gf_UIPartyFrameShowHidePlayerForPartyFrame (bool lp_showHide, int lp_player);
void libUIUI_gf_UIPartyFrameShowHideUnitStatusFrameofPlayerforPlayerGroup (bool lp_showHide, int lp_player, playergroup lp_playerGroup);
void libUIUI_gf_UIPartyFrameShowHideCoreHealth (bool lp_showHide);
void libUIUI_gf_UIPartyFrameShowHideCoreUnderAttackWarning (int lp_teamNumber, bool lp_showHide);
void libUIUI_gf_UIPartyFrameShowHideTeamPanelforPlayerGroup (int lp_teamNumber, bool lp_showHide, playergroup lp_playerGroup);
void libUIUI_gf_UIPartyFrameShowHideLevelInfoPanelforPlayerGroup (int lp_teamNumber, bool lp_showHide, playergroup lp_playerGroup);
void libUIUI_gf_UIPartyFrameSendAnimationEventtoPartyFrameMainPanel (string lp_animationEvent, playergroup lp_playerGroup);
void libUIUI_gf_UIPartyFrameSendAnimationEventtoPartyFrameHeroPanelforPlayer (string lp_animationEvent, int lp_player, playergroup lp_playerGroup);
void libUIUI_gf_UIPartyFrameHeroDies (int lp_killedPlayer, unit lp_killedUnit);
void libUIUI_gf_UIPartyFrameSetUpCoreHealthBarforTeam (int lp_team);
void libUIUI_gf_UIPartyFrameTalentAdvantageUpdate ();
void libUIUI_gf_UIPartyFrameTeamLevelUpdate (int lp_team, int lp_level);
void libUIUI_gf_UIPartyFrameSetPetFrame (unit lp_petUnit, int lp_player);
void libUIUI_gf_UIPartyFrameSetVikingFrame (int lp_player, unit lp_vikingUnit);
void libUIUI_gf_UIPartyFrameSetDVaFrame (int lp_playerID, bool lp_inMech);
void libUIUI_gf_UIPartyFramePetDies (int lp_player, timer lp_petDeathTimer);
void libUIUI_gf_UIPartyFrameVikingDies (int lp_player, unit lp_viking, timer lp_deathTimer);
void libUIUI_gf_UIPartyFrameHeroHearthstoneStart (int lp_player, unit lp_unit);
void libUIUI_gf_UIPartyFrameHeroHearthstoneFizzle (int lp_player, unit lp_unit);
void libUIUI_gf_UIPartyFrameSpecialCaseAurielRevivesHero (int lp_revivedPlayer, unit lp_revivedUnit);
void libUIUI_gf_UIPartyFrameGameTimerUpdate (text lp_gameTimeText);
void libUIUI_gf_UIPartyFrameHeroicTalentCooldownUpdate ();
void libUIUI_gf_UIPartyFrameSpecialCaseUpdatePetDeath (int lp_player);
void libUIUI_gf_UIPartyFrameSpecialCaseUpdateVikingsDeath (int lp_player);
void libUIUI_gf_UIPartyFrameSetCoreLifeTo0 (int lp_team);
void libUIUI_gf_UIPartyFrameTeamLevelHookUpXPBarUnitForTeamAndShowTeamLevelLabel (int lp_team, unit lp_unit);
unit libUIUI_gf_UIPingGetSpecialPingTargetInRangeOfPoint (point lp_point, bool lp_pingFromMinimap, int lp_pingingPlayer);
void libUIUI_gf_UIPingPlayerPingsUnit (int lp_pingingPlayer, unit lp_targetUnit, playergroup lp_pingPlayerGroup);
void libUIUI_gf_UIPingPlayerUsesOnMyWayPing (unit lp_pingedUnit, int lp_player, point lp_location);
void libUIUI_gf_UIPingPlayerUsesDefendPing (unit lp_pingedUnit, int lp_player, point lp_location);
void libUIUI_gf_UIPingPlayerUsesRetreatPing (int lp_player, point lp_location);
void libUIUI_gf_UIPingPlayerUsesDangerPing (int lp_player, point lp_location, unit lp_targetUnit);
void libUIUI_gf_UIPingPlayerUsesAssistMePing (int lp_player, unit lp_targetUnit, point lp_location);
int libUIUI_gf_PingDeterminePingTargetType (unit lp_unit);
int libUIUI_gf_PingLastCreatedPingTarget ();
void libUIUI_gf_PingPlayerStartsHearthStonePing (int lp_player, point lp_location);
void libUIUI_gf_PingCancelPlayersHearthStonePing (int lp_player);
void libUIUI_gf_PingIncrementPingCountAndManageTimersForPlayer (int lp_player);
void libUIUI_gf_PingResetPingLockoutTimeandPingCount (int lp_player);
void libUIUI_gf_PingCreateNewPingTarget (string lp_unitType, bool lp_pingIsForOccupiedVehicle, text lp_pingTargetNameOverride, text lp_alliedTargetMessageText, text lp_enemyTargetMessageText, soundlink lp_alliedTargetPingSound, soundlink lp_enemyTargetPingSound);
void libUIUI_gf_PingCreateNewPingTargetNameOverrideOnly (string lp_unitType, text lp_pingTargetNameOverride);
void libUIUI_gf_PingSetAllyEnemyTargetHeroVOForPingTarget (int lp_pingTarget, int lp_allyTargetHeroVO, int lp_enemyTargetHeroVO);
void libUIUI_gf_PingSetHumanAISourceHeroVOForPingTarget (int lp_pingTarget, int lp_humanSourceHeroVO, int lp_aISourceHeroVO);
void libUIUI_gf_PingSetCustomResponseTriggerForPingTarget (int lp_pingTarget, trigger lp_trigger);
void libUIUI_gf_PingSetCustomResponseTriggerForPingbyUnitType (string lp_pingUnitType, trigger lp_responseTrigger);
void libUIUI_gf_PreloadPanelShowHidePanel (bool lp_showHide);
void libUIUI_gf_PreloadPanelSetBackgroundImage (string lp_image);
void libUIUI_gf_UITabScreenTeamLevelUpdate (int lp_team, int lp_level);
void libUIUI_gf_UITabScreenTeamKillsUpdate (int lp_team, int lp_kills);
void libUIUI_gf_UITalentsPrepickedSelectBuildButtonForPlayerIngame (int lp_player, int lp_newBuild);
void libUIUI_gf_UITalentsPrepickedSelectBuildButtonForPlayerHeroSelection (int lp_player, int lp_newBuild);
void libUIUI_gf_UITalentsPrepickedUpdatePrepickedTalentsForPlayerIngame (int lp_player);
void libUIUI_gf_UITalentsPrepickedUpdatePrepickedTalentsForPlayerHeroSelection (int lp_player);
void libUIUI_gf_UITalentsPrepickedSetDialogItemPrepickedStateForPlayerGroup (int lp_dialogItem, bool lp_prepicked, playergroup lp_playerGroup);
void libUIUI_gf_UITalentsChoicePanelSetButtonStateForPlayer (int lp_player, int lp_talentColumn, string lp_state);
void libUIUI_gf_UITalentsChoicePanelHiglightAllTalentsForPlayer (int lp_player, bool lp_higlightedUnhilighted);
void libUIUI_gf_UITalentsChoicePanelRecommendedTalentForPlayer (int lp_player, int lp_talentColumn, bool lp_recommended);
void libUIUI_gf_UITalentsChoicePanelSetTierLevelsForPlayer (int lp_player);
void libUIUI_gf_UITalentsChoicePanelFillPanelForPlayer (int lp_player);
void libUIUI_gf_UITalentsChoicePanelShowHideTalentPanelforPlayer (bool lp_showHide, int lp_player);
void libUIUI_gf_UITalentsChoicePanelUpdateTalentTreeSelectionIndicatorForPlayer (int lp_player);
void libUIUI_gf_UITalentsChoicePanelSelectTierForPlayer (int lp_tier, int lp_player);
void libUIUI_gf_UITalentsChoicePanelUpdateTalentButtonsForPlayer (int lp_player);
void libUIUI_gf_UITalentsChoicePanelUpdateTierButtonsForPlayer (int lp_player);
void libUIUI_gf_UITalentsChoicePanelUpdateTierButtonsQuestsForPlayer (int lp_player);
void libUIUI_gf_InitObjectiveUI (text lp_title, text lp_tip, string lp_image);
void libUIUI_gf_ShowHideObjectiveUI (bool lp_showHide, playergroup lp_forPlayers);
void libUIUI_gf_ShowHideObjectiveUIImage (bool lp_showHide, playergroup lp_forPlayers);
void libUIUI_gf_ShowHideObjectiveUILabel (bool lp_showHide, playergroup lp_forPlayers);
void libUIUI_gf_ShowHideObjectiveUITeamPanel (bool lp_showHide, int lp_team, playergroup lp_forPlayers);
void libUIUI_gf_ShowHideObjectiveUITeamLabel (bool lp_showHide, int lp_team, playergroup lp_forPlayers);
void libUIUI_gf_ShowHideObjectiveUITeamImage (bool lp_showHide, int lp_team, playergroup lp_forPlayers);
void libUIUI_gf_ActivateDeactivateTopChevron (bool lp_activateDeactivate, playergroup lp_forPlayers);
void libUIUI_gf_SetObjectiveUITip (text lp_title, text lp_tip, playergroup lp_forPlayers);
void libUIUI_gf_SetObjectiveUIImage (string lp_image, playergroup lp_forPlayers);
void libUIUI_gf_SetObjectiveUILabel (text lp_value);
void libUIUI_gf_SetObjectiveUITeamLabels (text lp_team1Value, text lp_team2Value);
void libUIUI_gf_SetObjectiveUITeamImages (int lp_team, int lp_index, string lp_image, playergroup lp_players);
void libUIUI_gf_SetObjectiveUITeamTooltips (text lp_allyTooltip, text lp_enemyTooltip, text lp_team1ObserverTooltip, text lp_team2ObserverTooltip);
void libUIUI_gf_ShowHideObjectiveActiveUI (bool lp_showHide, playergroup lp_forPlayers);
void libUIUI_gf_ShowHideObjectiveActiveUILabel (bool lp_showHide, playergroup lp_forPlayers);
void libUIUI_gf_ShowHideObjectiveActiveUIImage (bool lp_showHide, playergroup lp_forPlayers);
void libUIUI_gf_ShowHideObjectiveActiveUITeamPanel (bool lp_showHide, int lp_team, playergroup lp_forPlayers);
void libUIUI_gf_ShowHideObjectiveActiveUITeamImage (bool lp_showHide, int lp_team, playergroup lp_forPlayers);
void libUIUI_gf_ShowHideObjectiveActiveUITeamLabel (bool lp_showHide, int lp_team, playergroup lp_forPlayers);
void libUIUI_gf_ShowHideObjectiveActiveUITeamSubLabel (bool lp_showHide, int lp_team, playergroup lp_forPlayers);
void libUIUI_gf_ShowHideObjectiveActiveUITeamHPBar (bool lp_showHide, int lp_team, playergroup lp_forPlayers);
void libUIUI_gf_SetObjectiveActiveUIImage (string lp_image, playergroup lp_forPlayers);
void libUIUI_gf_SetObjectiveActiveUILabel (text lp_label, playergroup lp_forPlayers);
void libUIUI_gf_SetObjectiveActiveUITip (text lp_title, text lp_tip, playergroup lp_forPlayers);
void libUIUI_gf_SetObjectiveActiveUITeamImage (int lp_team, string lp_image, playergroup lp_forPlayers);
void libUIUI_gf_SetObjectiveActiveUITeamLabel (int lp_team, text lp_value, playergroup lp_forPlayers);
void libUIUI_gf_SetObjectiveActiveUITeamSubLabel (int lp_team, text lp_value, playergroup lp_forPlayers);
void libUIUI_gf_SetObjectiveActiveUITeamHPBarUnit (int lp_team, unit lp_unit, playergroup lp_forPlayers);
void libUIUI_gf_SetObjectiveActiveUITeamHPBarText (int lp_team, text lp_value, playergroup lp_forPlayers);
void libUIUI_gf_UIUnitStatusUpdateArmorAndHealthOfUnit (unit lp_unit);
void libUIUI_gf_UIUnitStatusRelentlessUnstoppableController (unit lp_unit);

// Trigger Declarations
trigger libUIUI_gt_IncludeUI;
trigger libUIUI_gt_InitializeUI;
trigger libUIUI_gt_UIUpdateTimeLabelsTimerExpires;
trigger libUIUI_gt_UIInitializeDamageFlashUI;
trigger libUIUI_gt_UIDamageFlashTriggerDamageFlash;
trigger libUIUI_gt_UIDamageFlashLowHPSoundsLooper;
trigger libUIUI_gt_DeathRecapPanelInitialize;
trigger libUIUI_gt_DeathRecapOpenButtonClicked;
trigger libUIUI_gt_DEBUGDeathRecapPopulateTest;
trigger libUIUI_gt_UICombatFloatingElementsDamage;
trigger libUIUI_gt_UICombatFloatingElementsDamageResponseNoLeech;
trigger libUIUI_gt_UICombatFloatingElementsHeal;
trigger libUIUI_gt_UICombatFloatingElementsMana;
trigger libUIUI_gt_UICombatFloatingElementsMissing;
trigger libUIUI_gt_UICombatFloatingElementsAvoiding;
trigger libUIUI_gt_FullscreenOverlaysInitialize;
trigger libUIUI_gt_FullscreenOverlaysDeathOverlayHideTimeExpires;
trigger libUIUI_gt_FullscreenOverlaysSpecialOverlayHideTimeExpires;
trigger libUIUI_gt_FullscreenOverlaysInitializeRework;
trigger libUIUI_gt_GameOverSplashInitialize;
trigger libUIUI_gt_UIInitializeGameUIHandles;
trigger libUIUI_gt_UIGameUITurnOnFactionStates;
trigger libUIUI_gt_UIGameUISetGameData;
trigger libUIUI_gt_UIGodRayCreate;
trigger libUIUI_gt_UIGodRayDestroy;
trigger libUIUI_gt_UIGodRayDestroyOnDC;
trigger libUIUI_gt_UIInitializeHealingFountainsHelpText;
trigger libUIUI_gt_UIHealingFountainsHelpTextPlayerUsesHealingFountain;
trigger libUIUI_gt_UIHealingFountainsHelpTextTextDisplayController;
trigger libUIUI_gt_UIHealingFountainsHelpTextHealingFountainDies;
trigger libUIUI_gt_UIInitializeHeroConsole;
trigger libUIUI_gt_HeroConsoleUnitStatusBarsInitialize;
trigger libUIUI_gt_HeroConsoleUnitStatusBarsChannelBehaviorAdded;
trigger libUIUI_gt_HeroConsoleUnitStatusBarsUpdate;
trigger libUIUI_gt_UIHeroLeaderboardInitialize;
trigger libUIUI_gt_UIHeroLeaderboardUpdateStats;
trigger libUIUI_gt_HeroSelectionUIInit;
trigger libUIUI_gt_HSButtonUsed;
trigger libUIUI_gt_HSUICountdownTimerExpires;
trigger libUIUI_gt_HSUILoadoutScrollBarUsed;
trigger libUIUI_gt_HSUILoadoutInputTrigger;
trigger libUIUI_gt_HSUILoadoutListBoxSelected;
trigger libUIUI_gt_HSUILoadoutSearchTextChanges;
trigger libUIUI_gt_UIInitializeHeroTrackerArrow;
trigger libUIUI_gt_UIInputIngameButtonUsed;
trigger libUIUI_gt_InputPlayerClicksUnit;
trigger libUIUI_gt_InputUILeaderBoard;
trigger libUIUI_gt_InputUITalentTreeSelectionDown;
trigger libUIUI_gt_InputUITalentTreeSelectionUp;
trigger libUIUI_gt_InputUITalentTreeSelectionQuickSelection;
trigger libUIUI_gt_InputUIClearTextOption;
trigger libUIUI_gt_InputUIClearText;
trigger libUIUI_gt_KillLogInitialize;
trigger libUIUI_gt_KillLogOnHeroUnitDies;
trigger libUIUI_gt_KillLogOnQuestComplete;
trigger libUIUI_gt_KillLogItemTimerExpires;
trigger libUIUI_gt_KillLogDebugShowPanel;
trigger libUIUI_gt_KillLogDebugAnnounceKill;
trigger libUIUI_gt_KillLogDebugAnnounceQuest;
trigger libUIUI_gt_MapMechanicsPanelInitialize;
trigger libUIUI_gt_MapMechanicsPanelUpdate;
trigger libUIUI_gt_MapMechanicsBlackheartsBayChestsSpawnedFrameTimerExpires;
trigger libUIUI_gt_NotificationDisplayInitialize;
trigger libUIUI_gt_DEBUGNotificationAnimCheat;
trigger libUIUI_gt_UIInitializePartyFrameUI;
trigger libUIUI_gt_UIPartyFrameHeroRespawn;
trigger libUIUI_gt_UIPartyFrameHeroHearthstoneComplete;
trigger libUIUI_gt_UIPartyFrameHeroEntersSpecialDeathState;
trigger libUIUI_gt_UIPartyFrameDeathUpdateTimerExpires;
trigger libUIUI_gt_UIPingListenForPlayerPing;
trigger libUIUI_gt_InitializeBaseModPingData;
trigger libUIUI_gt_PingCountResetTimerExpires;
trigger libUIUI_gt_PingOnMyWayPathDisplayTimerExpires;
trigger libUIUI_gt_PreloadPanelInitialization;
trigger libUIUI_gt_UIInitializeTabScreenPanel;
trigger libUIUI_gt_UITalentsChoicePanelInitialize;
trigger libUIUI_gt_TeamStatusPanelInitialize;
trigger libUIUI_gt_TeamStatusPanelUpdate;

// Library Initialization
void libUIUI_InitVariables ();

