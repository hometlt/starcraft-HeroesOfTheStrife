include "TriggerLibs/natives"

//--------------------------------------------------------------------------------------------------
// Library: Core
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libCore_ge_GameModes_Normal = 0;
const int libCore_ge_GameModes_TryMe = 1;
const int libCore_ge_BlueRedTeams_Nothing = 0;
const int libCore_ge_BlueRedTeams_Blue = 1;
const int libCore_ge_BlueRedTeams_Red = 2;
const int libCore_ge_MAPName_None = 0;
const int libCore_ge_MAPName_BattleForSlayn = 1;
string libCore_ge_MAPName_Ident (int lp_val);
const int libCore_ge_AnnouncerVOPacks_Null = 0;
const int libCore_ge_AnnouncerVOPacks_ProtossFemale = 1;
const int libCore_ge_AnnouncerVOPacks_ProtossMale = 2;
const int libCore_ge_AnnouncerVOPacks_Default = -1;
const int libCore_ge_AnnouncerVOPacks_Abathur = -1;
const int libCore_ge_AnnouncerVOEvents_Null = 0;
const int libCore_ge_AnnouncerVOEvents_ChooseYourHero = 1;
const int libCore_ge_AnnouncerVOEvents_CountdownRemain = 2;
const int libCore_ge_AnnouncerVOEvents_Countdown30 = 3;
const int libCore_ge_AnnouncerVOEvents_Countdown10 = 4;
const int libCore_ge_AnnouncerVOEvents_Countdown5 = 5;
const int libCore_ge_AnnouncerVOEvents_Countdown4 = 6;
const int libCore_ge_AnnouncerVOEvents_Countdown3 = 7;
const int libCore_ge_AnnouncerVOEvents_Countdown2 = 8;
const int libCore_ge_AnnouncerVOEvents_Countdown1 = 9;
const int libCore_ge_AnnouncerVOEvents_GameStart = 10;
const int libCore_ge_AnnouncerVOEvents_HeroSlain = 11;
const int libCore_ge_AnnouncerVOEvents_HeroSlainObserver = 12;
const int libCore_ge_AnnouncerVOEvents_AllyKilled = 13;
const int libCore_ge_AnnouncerVOEvents_EnemyKilledNonparticipants = 14;
const int libCore_ge_AnnouncerVOEvents_EnemyKilledParticipants = 15;
const int libCore_ge_AnnouncerVOEvents_DoubleKill = 16;
const int libCore_ge_AnnouncerVOEvents_TripleKill = 17;
const int libCore_ge_AnnouncerVOEvents_QuadraKill = 18;
const int libCore_ge_AnnouncerVOEvents_PentaKill = 19;
const int libCore_ge_AnnouncerVOEvents_TeamKill = 20;
const int libCore_ge_AnnouncerVOEvents_BlueTeamKilled = 21;
const int libCore_ge_AnnouncerVOEvents_RedTeamKilled = 22;
const int libCore_ge_AnnouncerVOEvents_AllyFirstBlood = 23;
const int libCore_ge_AnnouncerVOEvents_BlueTeamFirstBlood = 24;
const int libCore_ge_AnnouncerVOEvents_RedTeamFirstBlood = 25;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeStart = 26;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeEndYou = 27;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeEndAlly = 28;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeUpgrade1Mayhem = 29;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeUpgrade2Rampage = 30;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeUpgrade3Untouchable = 31;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeUpgrade4AllStar = 32;
const int libCore_ge_AnnouncerVOEvents_APlayerHasLeftTheGame = 33;
const int libCore_ge_AnnouncerVOEvents_APlayerHasRejoinedTheGame = 34;
const int libCore_ge_AnnouncerVOEvents_GravestoneRevive = 35;
const int libCore_ge_AnnouncerVOEvents_Gravestomp = 36;
const int libCore_ge_AnnouncerVOEvents_GravestompObserver = 37;
const int libCore_ge_AnnouncerVOEvents_AlliedFortDestroyed = 38;
const int libCore_ge_AnnouncerVOEvents_EnemyFortDestroyed = 39;
const int libCore_ge_AnnouncerVOEvents_AlliedKeepDestroyed = 40;
const int libCore_ge_AnnouncerVOEvents_EnemyKeepDestroyed = 41;
const int libCore_ge_AnnouncerVOEvents_BlueTeamDestroysFort = 42;
const int libCore_ge_AnnouncerVOEvents_RedTeamDestroysFort = 43;
const int libCore_ge_AnnouncerVOEvents_BlueTeamDestroysKeep = 44;
const int libCore_ge_AnnouncerVOEvents_RedTeamDestroysKeep = 45;
const int libCore_ge_AnnouncerVOEvents_AlliedCoreUnderAttack = 46;
const int libCore_ge_AnnouncerVOEvents_BlueTeamCoreUnderAttack = 47;
const int libCore_ge_AnnouncerVOEvents_RedTeamCoreUnderAttack = 48;
const int libCore_ge_AnnouncerVOEvents_Victory = 49;
const int libCore_ge_AnnouncerVOEvents_Defeat = 50;
const int libCore_ge_AnnouncerVOEvents_BlueTeamWins = 51;
const int libCore_ge_AnnouncerVOEvents_RedTeamWins = 52;
const int libCore_ge_AnnouncerVOEvents_LegendaryEventStart = 53;
const int libCore_ge_AnnouncerVOEvents_LegendaryEventEnd = 54;
const int libCore_ge_AnnouncerVOEvents_AlliesCaptureMercCamp = 55;
const int libCore_ge_AnnouncerVOEvents_EnemiesCaptureMercCamp = 56;
const int libCore_ge_AnnouncerVOEvents_BlueTeamCapturesMercCamp = 57;
const int libCore_ge_AnnouncerVOEvents_RedTeamCapturesMercCamp = 58;
const int libCore_ge_AnnouncerVOEvents_TalentUnlocked = 59;
const int libCore_ge_AnnouncerVOEvents_EventCount = 60;
const int libCore_ge_AnnouncerVOEvents_GamePaused = -1;
const int libCore_ge_AnnouncerVOEvents_GameResumed = -1;
const int libCore_ge_AnnouncerVOEvents_EventStarts = 61;
const int libCore_ge_AnnouncerVOEvents_EventContinues = 62;
const int libCore_ge_AnnouncerVOEvents_EventEnds = 63;
string libCore_ge_AnnouncerVOEvents_Ident (int lp_val);
const int libCore_ge_VehicleUnitTypes_None = 0;
const int libCore_ge_HeroTalentType_None = 0;
const int libCore_ge_HeroTalentType_Basic = 1;
const int libCore_ge_HeroTalentType_Trait = 2;
const int libCore_ge_HeroTalentType_Heroic = 3;
const int libCore_ge_HeroTalentType_Active = 4;
const int libCore_ge_HeroTalentType_Passive = 5;
const int libCore_ge_HeroDataAbililitesFlags_ShowHeroSelection = 0;
const int libCore_ge_HeroDataAbililitesFlags_UsesCharges = 1;
const int libCore_ge_HeroDataAbililitesFlags_AffectedbyCDR = 2;
const int libCore_ge_HeroDataAbililitesFlags_AffectedbyOverdrive = 3;
const int libCore_ge_HeroDataAbililitesFlags_Heroic = 4;
const int libCore_ge_HeroDataAbililitesFlags_Trait = 5;
const int libCore_ge_HeroDataAbililitesFlags_ReplacementMount = 6;
const int libCore_ge_HeroDataAbililitesFlags_HideHotkey = 7;
const int libCore_ge_HeroDataHeroRole_None = 0;
const int libCore_ge_HeroDataHeroRole_Warrior = 1;
const int libCore_ge_HeroDataHeroRole_Support = 2;
const int libCore_ge_HeroDataHeroRole_Specialist = 3;
const int libCore_ge_HeroDataHeroRole_Assasin1 = 4;
const int libCore_ge_HeroDataHeroRole_Assasin2 = 5;
const int libCore_ge_HeroDataUniverse_None = 0;
const int libCore_ge_HeroDataUniverse_WarCraft = 1;
const int libCore_ge_HeroDataUniverse_StarCraft = 2;
const int libCore_ge_HeroDataUniverse_Diablo = 3;
const int libCore_ge_HeroVOEvents_Null = 0;
const int libCore_ge_HeroVOEvents_Revive = 1;
const int libCore_ge_HeroVOEvents_Healed = 2;
const int libCore_ge_HeroVOEvents_Resurrected = 3;
const int libCore_ge_HeroVOEvents_Pissed = 4;
const int libCore_ge_HeroVOEvents_GenericKill = 5;
const int libCore_ge_HeroVOEvents_TeamKilled = 6;
const int libCore_ge_HeroVOEvents_Laugh = 7;
const int libCore_ge_HeroVOEvents_No = 8;
const int libCore_ge_HeroVOEvents_EndEnemyKillingSpree = 9;
const int libCore_ge_HeroVOEvents_TalentChosen = 10;
const int libCore_ge_HeroVOEvents_Celebrate = 11;
const int libCore_ge_HeroVOEvents_WorthIt = 12;
const int libCore_ge_HeroVOEvents_Comeback = 13;
const int libCore_ge_HeroVOEvents_AIRetreat = 14;
const int libCore_ge_HeroVOEvents_AIGoodJob = 15;
const int libCore_ge_HeroVOEvents_AIOnMyWay = 16;
const int libCore_ge_HeroVOEvents_AIMercCapture = 17;
const int libCore_ge_HeroVOEvents_AICaution = 18;
const int libCore_ge_HeroVOEvents_AIAttack = 19;
const int libCore_ge_HeroVOEvents_AIUhOh = 20;
const int libCore_ge_HeroVOEvents_AIHeal = 21;
const int libCore_ge_HeroVOEvents_PingAttackHere = 22;
const int libCore_ge_HeroVOEvents_PingDefendHere = 23;
const int libCore_ge_HeroVOEvents_PingAttackTown = 24;
const int libCore_ge_HeroVOEvents_PingDefendTown = 25;
const int libCore_ge_HeroVOEvents_PingAttackWatchTower = 26;
const int libCore_ge_HeroVOEvents_PingDefendWatchTower = 27;
const int libCore_ge_HeroVOEvents_PingAttackCore = 28;
const int libCore_ge_HeroVOEvents_PingDefendCore = 29;
const int libCore_ge_HeroVOEvents_PingAttackMercCamp = 30;
const int libCore_ge_HeroVOEvents_PingKillHero = 31;
const int libCore_ge_HeroVOEvents_PingAssistHero = 32;
const int libCore_ge_HeroVOEvents_PingAssistMe = 33;
const int libCore_ge_HeroVOEvents_IntroQuestion = 34;
const int libCore_ge_HeroVOEvents_IntroResponse = 35;
const int libCore_ge_HeroVOEvents_IntroBoast = 36;
const int libCore_ge_HeroVOEvents_IntroAgree = 37;
const int libCore_ge_HeroVOEvents_VOXGetHit = 38;
const int libCore_ge_HeroVOEvents_VOXGetHitLarge = 39;
const int libCore_ge_HeroVOEvents_VOXGetHitSmall = 40;
const int libCore_ge_HeroVOEvents_Hello = 41;
const int libCore_ge_HeroVOEvents_Thanks = 42;
const int libCore_ge_HeroVOEvents_WellPlayed = 43;
const int libCore_ge_HeroVOEvents_Sorry = 44;
const int libCore_ge_HeroVOEvents_Goodbye = 45;
const int libCore_ge_HeroVOEvents_Cheer = 46;
const int libCore_ge_HeroVOEvents_GlueTrial = 47;
const int libCore_ge_MinionType_Null = 0;
const int libCore_ge_MinionType_Footmen = 1;
const int libCore_ge_MinionType_Wizard = 2;
const int libCore_ge_MinionType_Ranged = 3;
const int libCore_ge_MinionType_Catapult = 4;
const int libCore_ge_TalentDataInitializationTalentType_Ability = 0;
const int libCore_ge_TalentDataInitializationTalentType_Passive = 1;
const int libCore_ge_TalentDataInitializationTalentType_Active = 2;
const int libCore_ge_AbilityCategories_DisabledWhileDead = 0;
const int libCore_ge_AbilityCategories_HeroAbility1Q = 1;
const int libCore_ge_AbilityCategories_HeroAbility2W = 2;
const int libCore_ge_AbilityCategories_HeroAbility3E = 3;
const int libCore_ge_AbilityCategories_PrimaryAbility = 4;
const int libCore_ge_AbilityCategories_Magic = 5;
const int libCore_ge_AbilityCategories_Physical = 6;
const int libCore_ge_AbilityCategories_Aura = 7;
const int libCore_ge_AbilityCategories_HeroAbility5D = 8;
const int libCore_ge_AbilityCategories_Dispel = 9;
const int libCore_ge_AbilityCategories_PassivePhysical = 10;
const int libCore_ge_AbilityCategories_PassiveMagic = 11;
const int libCore_ge_AbilityCategories_Heal = 12;
const int libCore_ge_AbilityCategories_SpellSteal = 13;
const int libCore_ge_AbilityCategories_Repair = 14;
const int libCore_ge_AbilityCategories_HeroAbilityInventory = 15;
const int libCore_ge_AbilityCategories_HeroAbilityReplacementMount = 16;
const int libCore_ge_AbilityCategories_HeroAbility4R = 17;
const int libCore_ge_AbilityCategories_CabBeDisabled = 18;
const int libCore_ge_AbilityCategories_CabBeSilenced = 19;
const int libCore_ge_AbilityCategories_CabBeIllusionDisabled = 20;
const int libCore_ge_AbilityCommandFlags_AllowMinimap = 0;
const int libCore_ge_AbilityCommandFlags_AllowSelfCast = 1;
const int libCore_ge_AbilityCommandFlags_Continuous = 2;
const int libCore_ge_AbilityCommandFlags_Hidden = 3;
const int libCore_ge_AbilityCommandFlags_HidePath = 4;
const int libCore_ge_AbilityCommandFlags_IgnoreUser = 5;
const int libCore_ge_AbilityCommandFlags_ShowInGlossary = 6;
const int libCore_ge_AbilityCommandFlags_SendToSelection = 7;
const int libCore_ge_AbilityCommandFlags_UseDefaultButton = 8;
const int libCore_ge_AbilityCommandFlags_CreateDefaultButton = 9;
const int libCore_ge_CollisionTypes_Land01Minion = 0;
const int libCore_ge_CollisionTypes_Land02Hero = 1;
const int libCore_ge_CollisionTypes_Land03 = 2;
const int libCore_ge_CollisionTypes_Land04 = 3;
const int libCore_ge_CollisionTypes_Land05Boss = 4;
const int libCore_ge_CollisionTypes_Land06Structure = 5;
const int libCore_ge_CollisionTypes_Land07Burrow = 6;
const int libCore_ge_CollisionTypes_Land08TinyCreature = 7;
const int libCore_ge_CollisionTypes_Land09 = 8;
const int libCore_ge_CollisionTypes_Land10 = 9;
const int libCore_ge_CollisionTypes_Land11 = 10;
const int libCore_ge_CollisionTypes_Land12 = 11;
const int libCore_ge_CollisionTypes_Land13 = 12;
const int libCore_ge_CollisionTypes_Land14 = 13;
const int libCore_ge_CollisionTypes_Land15 = 14;
const int libCore_ge_CollisionTypes_Land16ShadowDivideVorazun = 15;
const int libCore_ge_CollisionTypes_Air01 = 16;
const int libCore_ge_CollisionTypes_Air02 = 17;
const int libCore_ge_CollisionTypes_Air03 = 18;
const int libCore_ge_CollisionTypes_Air04 = 19;
const int libCore_ge_CollisionTypes_Air05 = 20;
const int libCore_ge_CollisionTypes_Air06 = 21;
const int libCore_ge_CollisionTypes_Air07 = 22;
const int libCore_ge_CollisionTypes_Air08 = 23;
const int libCore_ge_CollisionTypes_Air09 = 24;
const int libCore_ge_CollisionTypes_Air10 = 25;
const int libCore_ge_CollisionTypes_Air11 = 26;
const int libCore_ge_CollisionTypes_Air12 = 27;
const int libCore_ge_CollisionTypes_Air13 = 28;
const int libCore_ge_CollisionTypes_Air14 = 29;
const int libCore_ge_CollisionTypes_Air15 = 30;
const int libCore_ge_CollisionTypes_Air16 = 31;
const int libCore_ge_CollisionOperationType_TurnOn = 0;
const int libCore_ge_CollisionOperationType_TurnOff = 1;
const int libCore_ge_CollisionOperationType_Toggle = 2;
const int libCore_ge_MuteType_ChatMessages = 0;
const int libCore_ge_MuteType_Pings = 1;
const int libCore_ge_MuteType_Announcements = 2;
const int libCore_ge_PlayerGroupOperation_And = 0;
const int libCore_ge_PlayerGroupOperation_Nand = 1;
const int libCore_ge_PlayerGroupOperation_Or = 2;
const int libCore_ge_PlayerGroupOperation_Xor = 3;
const int libCore_ge_PlayerGroupOperation_Nor = 4;
const int libCore_ge_PlayerGroupOperation_Subtract = 5;
const int libCore_ge_HeroAbilitySlot_None = 0;
const int libCore_ge_HeroAbilitySlot_BasicAbility1 = 1;
const int libCore_ge_HeroAbilitySlot_BasicAbility2 = 2;
const int libCore_ge_HeroAbilitySlot_BasicAbility3 = 3;
const int libCore_ge_HeroAbilitySlot_HeroicAbility = 4;
const int libCore_ge_HeroAbilitySlot_Trait = 5;
const int libCore_ge_HeroAbilitySlot_ActiveInventory = 6;
const int libCore_ge_HeroAbilitySlot_Passive = 7;
const int libCore_ge_HeroAbilitySlot_ReplacementMount = 8;
const int libCore_ge__UnitDataType_Actor = 0;
const int libCore_ge__UnitDataType_Integer = 1;
const int libCore_ge__UnitDataType_Ping = 2;
const int libCore_ge__UnitDataType_Point = 3;
const int libCore_ge__UnitDataType_Region = 4;
const int libCore_ge__UnitDataType_TextTag = 5;
const int libCore_ge__UnitDataType_Unit = 6;
const int libCore_ge__UnitDataType_UnitGroup = 7;

// Constants
const int libCore_gv_maxMapSoundtracks_C = 3;
const int libCore_gv_cOMPUTER_TeamChaos = 12;
const int libCore_gv_cOMPUTER_TeamOrder = 11;
const int libCore_gv_cOMPUTER_Hostile = 15;
const int libCore_gv_cOMPUTER_Neutral = 0;
const int libCore_gv_oBSERVER_ObserverUIPlayer = 13;
const int libCore_gv_abilityDataMaxAbilityCount = 256;
const int libCore_gv_abilityDataPlayerResponseMaxCount = 8;
const int libCore_gv_dataAnnouncerVONumberOfAnnouncerPacks = 2;
const int libCore_gv_dataAnnouncerVOMaxNumberOfAnnouncerEvents = 80;
const int libCore_gv_cOLOROrderPlayerColor = 0;
const int libCore_gv_cOLORChaosPlayerColor = 14;
const int libCore_gv_cOLORHostilePlayerColor = 1;
const int libCore_gv_cOLORNeutralPlayerColor = 5;
const string libCore_gv_debugPathDebugOutput = "Debug_Output";
const string libCore_gv_debugPathScoreValueLog = "ScoreValueLog";
const string libCore_gv_debugPathEncouragementDataTrackingLog = "EncouragementDataLog";
const fixed libCore_gv_bALHeroSelectTime = 120.0;
const fixed libCore_gv_bALOpenTheGatesDelay = 35.0;
const fixed libCore_gv_bALSpawnMinionsDelay = 5.0;
const fixed libCore_gv_bALJungleTryMeCampActivationDelay = 10.0;
const fixed libCore_gv_bALJungleCreepCampActivationDelay = 60.0;
const fixed libCore_gv_bALJungleBossCampActivationDelay = 180.0;
const fixed libCore_gv_bALJungleWatchTowerActivationDelay = 5.0;
const fixed libCore_gv_bALXPTrickleStartDelay = 35.0;
const int libCore_gv_data_MaxHeroAllowedMountCategories_C = 8;
const int libCore_gv_data_MaxHeroAllowedUserDataSkinCount_C = 6;
const int libCore_gv_dataHeroesMaxAllowedSkinCount_C = 64;
const int libCore_gv_dataHeroesMaxHeroCount = 10;
const int libCore_gv_dataHeroesNumberOfHeroClasses = 4;
const int libCore_gv_dataHeroesNumberOfHeroesPerClass = 10;
const int libCore_gv_dataHeroesNumberOfPairedHeroesPerHero = 2;
const int libCore_gv_dataHeroesMaxPlayerResponsesPerHero = 10;
const int libCore_gv_dataHeroesMaxAlternateHeroes = 3;
const int libCore_gv_dataHeroesMaxVisibleHeroAbilitiesPerHero = 5;
const int libCore_gv_dataHeroesMaxAbilitiesPerHero = 16;
const int libCore_gv_dataHeroesNumberOfAdditionalAbilitiesPerHero = 1;
const int libCore_gv_dataHeroesNumberOfBasicAbilitiesPerHero = 3;
const int libCore_gv_dataHeroesNumberOfBasicAbilitiyVariationsPerAbility = 4;
const int libCore_gv_dataHeroesNumberOfHeroicAbilitiesPerHero = 3;
const int libCore_gv_dataHeroesMaxTalentTiers = 7;
const int libCore_gv_dataHeroesMaxTalentsPerTier = 5;
const int libCore_gv_dataHeroesMaxTalentBehaviorsPerTalent = 5;
const int libCore_gv_dataHeroesMaxPlayerResponsesPerTalent = 5;
const int libCore_gv_dataHeroesMaxAdditionalTalentsPerTalent = 5;
const int libCore_gv_dataHeroVOMaxNumberOfHeroVOEvents = 49;
const int libCore_gv_bALMaxMercenaryPathLayers = 3;
const int libCore_gv_killingSpree_KillThresholdCount_C = 4;
const int libCore_gv_killingSpree_KillThresholdBase_C = 5;
const int libCore_gv_killingSpree_KillThresholdUpgrade1_C = 10;
const int libCore_gv_killingSpree_KillThresholdUpgrade2_C = 15;
const int libCore_gv_killingSpree_KillThresholdUpgrade3_C = 20;
const int libCore_gv_dataMinionWaveCompositionMaxGroupCount = 4;
const int libCore_gv_dataMountsMaxMountCount = 256;
const int libCore_gv_dataMountsMaxMountVariationCount = 10;
const int libCore_gv_dataScalingMaxScalingTicks = 60;
const int libCore_gv_bALMaxTeams = 2;
const int libCore_gv_bALMaxPlayers = 10;
const int libCore_gv_bALMaxPlayersOnATeam = 5;
const int libCore_gv_bALMaxEnginePlayerCount = 15;
const int libCore_gv_bALMaxLevel = 30;
const fixed libCore_gv_bALXPRadius = 12.75;
const fixed libCore_gv_bALHeroKillXPRadius = 20.0;
const fixed libCore_gv_bALTrebuchetKillXPRadius = 40.0;
const fixed libCore_gv_bALRecentDamageResetTime = 5.0;
const fixed libCore_gv_bALXPSharingBonus = 1.2;
const int libCore_gv_bALPlayerActiveInventorySlots = 6;
const int libCore_gv_bALPlayerTotalInventorySlots = 6;
const fixed libCore_gv_bALHealthRegenTime = 480.0;
const fixed libCore_gv_bALManaRegenTime = 180.0;
const fixed libCore_gv_bALTyraelPassiveDeathTimeReduction = 10.0;
const int libCore_gv_dataSkinsMaxSkinCount = 256;
const int libCore_gv_dataSkinsMaxFeatureCount = 5;
const int libCore_gv_dataSkinsMaxSkinVariationCount = 10;
const int libCore_gv_talents_MaxTalentEntryCount_C = 500;
const int libCore_gv_talents_MaxTalentBehaviorsPerRank_C = 5;
const int libCore_gv_talents_MaxPrepickedTalentProfiles_C = 3;
const fixed libCore_gv_talents_HardenedFocus_Percent_C = 0.6;
const fixed libCore_gv_bAL33PercentCCReduction = 0.33;
const fixed libCore_gv_bAL6PercentCCReduction = 0.6;
const fixed libCore_gv_bAL5PercentCCReduction = 0.5;
const fixed libCore_gv_bAL4JuggernautCCReduction = 0.4;
const fixed libCore_gv_data_WatchTower_CaptureTime_C = 1.5;
const fixed libCore_gv_data_WatchTower_CaptureRadius_C = 4.0;
const fixed libCore_gv_scaling_Minion_Melee_Value = 1.2;
const fixed libCore_gv_scaling_Minion_Psionic_Value = 1.8;
const fixed libCore_gv_scaling_Minion_Ranged_Value = 2.0;
const fixed libCore_gv_scaling_Mercenary_BruiserHybrid_Value = 4.0;
const fixed libCore_gv_scaling_Mercenary_BossColossus_Value = 6.0;
const fixed libCore_gv_scaling_Mercenary_BossElemental_Value = 10.0;
const fixed libCore_gv_data_XP_TricklePeriod_C = 1.0;
const fixed libCore_gv_data_XP_TrickleAmount_C = 23.0;
const fixed libCore_gv_data_XP_SiegeGiantCapture_C = 150.0;
const fixed libCore_gv_data_XP_ColossusCapture_C = 500.0;
const fixed libCore_gv_data_XP_SlaynElementalCapture_C = 750.0;
const fixed libCore_gv_data_XP_VanguardCapture_C = 150.0;
const fixed libCore_gv_data_XP_HybridCapture_C = 350.0;
const fixed libCore_gv_data_XP_HeroValuePerLevel_C = 50.0;
const int libCore_gv_data_XP_HeroLevelModifier_C = 5;
const fixed libCore_gv_data_XP_Hero1LevelGapMultiplier_C = 0.2;
const fixed libCore_gv_data_XP_Hero2LevelGapMultiplier_C = 0.4;
const fixed libCore_gv_data_XP_Hero3LevelGapMultiplier_C = 0.6;
const fixed libCore_gv_data_XP_Hero4LevelGapMultiplier_C = 0.8;
const fixed libCore_gv_data_XP_Hero5LevelGapMultiplier_C = 1.0;
const fixed libCore_gv_data_XP_HeroOneQuarterValueCoefficient_C = 0.25;
const fixed libCore_gv_data_XP_HeroHalfValueCoefficient_C = 0.5;
const fixed libCore_gv_data_XP_HeroThreeQuarterValueCoefficient_C = 0.75;
const int libCore_gv_abilityCategoriesCount = 20;
const int libCore_gv_abilityCommandFlagsCount = 9;
const int libCore_gv_coreMaxBehaviorStacks = 65535;

// Structures
struct libCore_gs_AbilityData {
    int lv_variationNumber;
    bool lv_isAffectedByCooldownReduction;
    bool lv_isHeroSelectionVisibility;
    bool lv_isUsesCharges;
    bool lv_isReplacementMount;
    bool lv_isPassive;
    bool lv_isInventory;
    string lv_abilityLink;
    string lv_abilityButtonLink;
    text lv_abilityName;
    text lv_abilitySimpleText;
    text lv_abilityTooltipText;
    string lv_abilityIcon;
    text lv_abilityHotkey;
    text lv_abilityInfoText;
    string lv_inventoryUnit;
    string lv_cDRSkipValidator;
    string lv_paired;
    string lv_slot;
    string lv_type;
    string[libCore_gv_abilityDataPlayerResponseMaxCount + 1] lv_playerResponse;
    int lv_playerResponseCount;
};

struct libCore_gs_AnnouncerVOPack {
    text lv_name;
    soundlink[libCore_gv_dataAnnouncerVOMaxNumberOfAnnouncerEvents + 1] lv_sounds;
    string lv_announcer;
    string lv_stringName;
    string[libCore_gv_dataAnnouncerVOMaxNumberOfAnnouncerEvents + 1] lv_soundLinkArray;
};

struct libCore_gs_HeroData {
    string lv_heroID;
    string lv_heroAttributeID;
    string lv_heroHyperlinkID;
    string lv_heroLink;
    string lv_heroLevelScalingEffect;
    string[libCore_gv_dataHeroesMaxPlayerResponsesPerHero + 1] lv_playerResponse;
    int lv_playerResponseCount;
    string lv_heroUnitType;
    string[libCore_gv_dataHeroesMaxAlternateHeroes + 1] lv_heroUnitTypeAlternate;
    int lv_numberOfAlternateHeroUnitTypes;
    int lv_class;
    int lv_universe;
    string lv_universeIcon;
    text lv_description;
    string lv_releaseDate;
    string[libCore_gv_bALMaxLevel + 1] lv_levelEffect;
    bool lv_heroRequiresCustomRespawn;
    bool lv_hero0EnergyOnRespawn;
    bool lv_heroAbnormalDeath;
    bool lv_heroAbnormalExperienceGain;
    bool lv_heroAbnormalRespawn;
    bool lv_isFlyer;
    bool lv_isPaired;
    bool lv_usesMount;
    int lv_lastUpdateDateTime;
    string lv_portrait;
    string[libCore_gv_dataHeroesNumberOfPairedHeroesPerHero + 1] lv_portraitPaired;
    string lv_leaderboardImage;
    string lv_heroSelectScreenButtonPortrait;
    string lv_heroSelectScreenDraftPortrait;
    string lv_heroSelectScreenBackgroundImage;
    string lv_partyFrameImage;
    int[libCore_gv_dataHeroesMaxAllowedSkinCount_C + 1] lv_skinArray;
    int lv_skinCount;
    int lv_allowedMountCategoryCount;
    string[libCore_gv_data_MaxHeroAllowedMountCategories_C + 1] lv_allowedMountCategories;
    int[libCore_gv_dataMountsMaxMountCount + 1] lv_mountArray;
    int lv_mountCount;
    fixed lv_mountScaling;
    int lv_defaultMount;
    int[libCore_gv_dataHeroesMaxTalentTiers + 1] lv_talentsCountPerTier;
    int[libCore_gv_dataHeroesMaxTalentTiers + 1][libCore_gv_dataHeroesMaxTalentsPerTier + 1] lv_talentIndex;
    int lv_talentHeroicTier;
    int[libCore_gv_dataHeroesMaxTalentTiers + 1] lv_talentTierLevel;
    int[libCore_gv_dataHeroesMaxTalentTiers + 1] lv_resetFavoriteTalentTierAtPatch;
    int[libCore_gv_dataHeroesMaxAbilitiesPerHero + 1] lv_abilityIndex;
    int lv_abilitiesCount;
    text lv_name;
    text[libCore_gv_dataHeroesNumberOfPairedHeroesPerHero + 1] lv_namePaired;
    text lv_storeName;
    text lv_storeNamePaired;
    text lv_questDataName;
    bool lv_questDataIsQuest;
    text[libCore_gv_bALMaxEnginePlayerCount + 1] lv_questDataTooltipText;
    string lv_questDataIcon;
    string lv_questDataTokenCounterBehavior;
    string lv_questDataButton;
};

struct libCore_gs_HeroVO {
    string[libCore_gv_dataHeroVOMaxNumberOfHeroVOEvents + 1] lv_vOEventLines;
    string[libCore_gv_dataHeroesMaxHeroCount + 1] lv_specificHeroTakedownLines;
    string[libCore_gv_dataHeroesMaxHeroCount + 1] lv_specificHeroIntroQuestionLines;
    string[libCore_gv_dataHeroesMaxHeroCount + 1] lv_specificHeroIntroResponseLines;
};

struct libCore_gs_MinionWaveComposition {
    string[libCore_gv_dataMinionWaveCompositionMaxGroupCount + 1] lv_minionUnitType;
    int[libCore_gv_dataMinionWaveCompositionMaxGroupCount + 1] lv_groupMinionType;
    int[libCore_gv_dataMinionWaveCompositionMaxGroupCount + 1] lv_groupMinionCount;
};

struct libCore_gs_HeroMountData {
    bool lv_isEnabled;
    bool lv_isMorphMount;
    bool lv_showInStore;
    bool lv_attachedMountModel;
    text lv_mountName;
    text lv_mountAdditionalSearchTextWord;
    text lv_mountInfo;
    text lv_accessDeniedInfo;
    string lv_collectionCategory;
    string lv_mountCategory;
    string lv_releaseDate;
    string lv_mountID;
    string lv_mountIDPersonal;
    int lv_mountIDVariationNumber;
    string lv_creationActorMessageMacro;
    string lv_mountModel;
    fixed lv_mountModelScale;
    fixed lv_mountModelWalkAnimMoveSpeed;
    string lv_mountPoseAnimGroup;
    string lv_mountPoseAnimGroupStatus;
    string lv_mountUpFXActor;
    string lv_dismountFXActor;
    string lv_vOMountSound;
    string lv_vODismountSound;
    string lv_vOLoopingSound;
    string lv_vOMovingSound;
    string lv_vOStationarySound;
    string lv_vOMoveStartSound;
    string lv_vOMoveStopSound;
    string lv_vOTurboSound;
    string lv_event;
    string lv_supporterTypeRequired;
    string lv_previewCutsceneFile;
    string lv_tileCutsceneFile;
    string lv_miniPortraitCutsceneFile;
    string lv_heroSelectCutsceneFile;
    string lv_lootChestRewardCutsceneFile;
};

struct libCore_gs_HeroSkinData {
    string lv_skinID;
    int lv_skinIDVariationNumber;
    string lv_skinIDPersonal;
    text lv_name;
    text lv_info;
    text lv_additionalSearchText;
    string lv_releaseDate;
    string[libCore_gv_dataSkinsMaxFeatureCount + 1] lv_featureArray;
    int lv_featureArrayCount;
    string lv_vODefinition;
    string lv_skinLink;
    string lv_upgradeLink;
    int lv_defaultMount;
    string lv_mountCategory;
    string lv_event;
    string lv_supporterTypeRequired;
    text lv_accessDeniedInfo;
    bool lv_isEnabled;
    string lv_heroSelectCutscene;
    string lv_scoreScreenCutscene;
    string lv_miniPortraitCutscene;
    string lv_previewCutscene;
    string lv_draftCutscene;
    string lv_draftPickCutscene;
    string lv_endOfMatchCutscene;
    string lv_tileCutscene;
    string lv_lootChestRewardCutscene;
};

struct libCore_gs_TalentData {
    int lv_questIndex;
    int lv_abilityIndex;
    string lv_talentType;
    string lv_talentLink;
    int lv_prerequisiteTalentIndex;
    bool lv_isQuest;
    string lv_buttonEntry;
    text lv_buttonName;
    text lv_buttonSimpleText;
    text lv_buttonInfoText;
    text[libCore_gv_bALMaxEnginePlayerCount + 1] lv_buttonTooltipText;
    string lv_buttonIcon;
    text lv_buttonHotkey;
    string[libCore_gv_dataHeroesMaxTalentBehaviorsPerTalent + 1] lv_behavior;
    string lv_effectModification;
    string lv_effectOnCreation;
    string lv_effectOnRemove;
    string[libCore_gv_dataHeroesMaxPlayerResponsesPerTalent + 1] lv_playerResponse;
    int lv_playerResponseCount;
    string lv_item;
    string lv_questTokenCounterBehavior;
    int lv_questBehaviorMaxStacks;
    int[libCore_gv_dataHeroesMaxAdditionalTalentsPerTalent + 1] lv_additionalTalentIndex;
};

// Variable Declarations
bool libCore_gv_dEBUGDebuggingEnabled;
bool libCore_gv_dEBUGPingLimitEnabled;
bool libCore_gv_sYSTowerAI;
bool libCore_gv_sYSMinionAI;
bool libCore_gv_sYSJungleWatchTowers;
bool libCore_gv_sYSTowns;
bool libCore_gv_sYSEventsEnabled;
bool libCore_gv_sYSStartGame;
bool libCore_gv_sYSJungleCreepCamps;
bool libCore_gv_sYSCustomMinionsEnabled;
bool libCore_gv_sYSCustomRunAnimationsEnabled;
int libCore_gv_sYSHeroStartLevel;
bool libCore_gv_sYSXPOn;
bool libCore_gv_dEBUGErrorDuringInitialization;
bool libCore_gv_gameOver;
bool libCore_gv_gameStarted;
point[libCore_gv_bALMaxTeams + 1][libCore_gv_bALMaxPlayersOnATeam + 1] libCore_gv_mAPStartPoints;
string libCore_gv_mAPMapLight;
int libCore_gv_mAPCurrentMap;
string libCore_gv_mAPBackgroundImage;
region libCore_gv_mAPExploredRegion;
string[libCore_gv_maxMapSoundtracks_C + 1] libCore_gv_mAPMapSoundtrack;
bool libCore_gv_mAPUsesCirclingAI;
int libCore_gv_mAPPathNodesBeforeLooping;
playergroup libCore_gv_allHeroPlayersPlusObserver;
playergroup libCore_gv_teamOrder;
playergroup libCore_gv_teamChaos;
playergroup libCore_gv_activeHumanPlayers;
playergroup libCore_gv_heroPlayersIncludeAIHeroPlayers;
playergroup libCore_gv_nPCPlayers;
playergroup[libCore_gv_bALMaxEnginePlayerCount + 1] libCore_gv_playerGroupFromPlayer;
int libCore_gv_abilityDataNumberOfAbilities;
libCore_gs_AbilityData[libCore_gv_abilityDataMaxAbilityCount + 1] libCore_gv_abilityData;
string[libCore_gv_dataAnnouncerVOMaxNumberOfAnnouncerEvents + 1] libCore_gv_dataAnnouncerVODataFieldMap;
libCore_gs_AnnouncerVOPack[libCore_gv_dataAnnouncerVONumberOfAnnouncerPacks + 1] libCore_gv_dataAnnouncerVOPacks;
color libCore_gv_cOLORPlayerColor;
color libCore_gv_cOLORAllyColor;
color libCore_gv_cOLOREnemyColor;
color libCore_gv_cOLORNeutralColor;
color libCore_gv_cOLORJungleCreepColor;
unitfilter libCore_gv_filtersAlly;
unitfilter libCore_gv_filtersEnemy;
unitfilter libCore_gv_filtersVisible;
unitfilter libCore_gv_filtersNoMinionAggro;
unitfilter libCore_gv_filtersIgnoredByTargetingAI;
unitfilter libCore_gv_filtersHeroic;
unitfilter libCore_gv_filtersHeroicjustexcludingCloakedandDead;
unitfilter libCore_gv_filtersHeroicjustexcludingMissile;
unitfilter libCore_gv_filtersHeroicjustexcludingHallucination;
unitfilter libCore_gv_filtersHeroicAlly;
unitfilter libCore_gv_filtersHeroicAllyandnotHallucination;
unitfilter libCore_gv_filtersHeroicAllyandnotHallucinationHoverorBenign;
unitfilter libCore_gv_filtersHeroicAllyandnotImmuneToFriendlyAbilitiesorBenign;
unitfilter libCore_gv_filtersHeroicAllyorPlayer;
unitfilter libCore_gv_filtersHeroicAllyorPlayerandnotHallucinationorBenign;
unitfilter libCore_gv_filtersHeroicAllyorPlayerandnotHover;
unitfilter libCore_gv_filtersHeroicAllyorPlayerandnotHoverorStasis;
unitfilter libCore_gv_filtersHeroicAllyorPlayerandnotStasis;
unitfilter libCore_gv_filtersHeroicEnemy;
unitfilter libCore_gv_filtersHeroicEnemyorNeutral;
unitfilter libCore_gv_filtersHeroicEnemyandnotHallucination;
unitfilter libCore_gv_filtersHeroicandnotBenign;
unitfilter libCore_gv_filtersHeroicandnotBenignInvulnerableorStasis;
unitfilter libCore_gv_filtersHeroicandnotCloaked;
unitfilter libCore_gv_filtersHeroicandnotHallucination;
unitfilter libCore_gv_filtersHeroicandnotInvulnerable;
unitfilter libCore_gv_filtersHeroicandnotInvulnerableorStasis;
unitfilter libCore_gv_filtersHeroicandnotPlayer;
unitfilter libCore_gv_filtersHeroicandnotStasis;
unitfilter libCore_gv_filtersMinionsAllLaners;
unitfilter libCore_gv_filtersMinionsTownMinions;
unitfilter libCore_gv_filtersMercLaner;
unitfilter libCore_gv_filtersMercDefender;
unitfilter libCore_gv_filtersMapBosses;
unitfilter libCore_gv_filtersMapCreatures;
unitfilter libCore_gv_filtersStructure;
unitfilter libCore_gv_filtersSummoned;
int libCore_gv_dataHeroesNumberOfHeroes;
libCore_gs_HeroData[libCore_gv_dataHeroesMaxHeroCount + 1] libCore_gv_dataHeroesHeroData;
string[libCore_gv_dataHeroVOMaxNumberOfHeroVOEvents + 1] libCore_gv_dataHeroVODataFieldMap;
libCore_gs_HeroVO[libCore_gv_dataHeroesMaxHeroCount + 1][libCore_gv_bALMaxEnginePlayerCount + 1] libCore_gv_dataHeroVO;
fixed libCore_gv_bALMinionWaveInterval;
fixed[libCore_gv_bALMaxTeams + 1] libCore_gv_bALMinionTeamSpawnDelay;
libCore_gs_MinionWaveComposition[libCore_gv_bALMaxTeams + 1] libCore_gv_dataMinionWaveComposition;
int libCore_gv_dataMountsMountCount;
libCore_gs_HeroMountData[libCore_gv_dataMountsMaxMountCount + 1] libCore_gv_dataMountsMountData;
fixed libCore_gv_bALCancelDelay;
fixed libCore_gv_bALHeroKillCreditTimeWindow;
fixed[libCore_gv_bALMaxLevel + 1] libCore_gv_bALDeathTimes;
fixed libCore_gv_bALMaxDeathTime;
fixed libCore_gv_bALDeathTimeOverride;
fixed libCore_gv_bALDeathTimeScaler;
int libCore_gv_dataSkinsSkinCount;
libCore_gs_HeroSkinData[libCore_gv_dataSkinsMaxSkinCount + 1] libCore_gv_dataSkinsSkinData;
int libCore_gv_talents_TalentEntryCount;
libCore_gs_TalentData[libCore_gv_talents_MaxTalentEntryCount_C + 1] libCore_gv_talentData;
fixed libCore_gv_talents_HardenedFocus_Value_C;
fixed libCore_gv_talents_RelentlessCCReduction20_C;
fixed libCore_gv_talents_RelentlessCCReduction40_C;
fixed libCore_gv_talents_RelentlessCCReduction60_C;
fixed libCore_gv_talents_RelentlessCCReduction75_C;
fixed libCore_gv_talents_FuryOfTheStormBounceDamagePercent_C;
fixed[libCore_gv_bALMaxLevel + 1] libCore_gv_dataXPLevelXPValues;

// Function Declarations
text libCore_gf_AbilityTalentHotkeyText (text lp_hotkeyText, int lp_type);
text libCore_gf_AbilityTalentHotkeyTextExpanded (string lp_slot);
void libCore_gf_DataInitializeHero (string lp_instance);
bool libCore_gf_HeroHasQuestAtStart (int lp_heroIndex);
int libCore_gf_RoleGetHeroRoleofHeroPreset (string lp_hero);
text libCore_gf_RoleGetHeroRoleofHeroText (string lp_hero);
int libCore_gf_UniverseGetHeroUniverse (string lp_hero);
int libCore_gf_HeroicAbilityIndexOfHero (int lp_heroIndex);
int libCore_gf_HeroDataAbilityVariationsCountPerSlotForHero (int lp_heroIndex, string lp_abilitySlot, bool lp_paired);
int libCore_gf_HeroDataAbilityIndexFromVariationNumberOfHero (int lp_heroIndex, string lp_abilitySlot, int lp_variation, bool lp_paired);
fixed libCore_gf_HeroDeathTime (int lp_player, int lp_level);
int libCore_gf_HeroIndexOfUnitType (string lp_heroUnitType);
int libCore_gf_HeroIndexOfHeroLink (string lp_heroLink);
int libCore_gf_HeroIndexOfUnit (unit lp_hero);
int libCore_gf_HeroIndexOfPlayerHero (int lp_player);
int libCore_gf_DataHeroesDefaultSkinIndexOfHero (int lp_heroIndex);
int libCore_gf_DataHeroesDefaultMountIndexOfHero (int lp_heroIndex);
void libCore_gf_DataHeroVOMapDataField (int lp_event, string lp_arrayIndexName);
void libCore_gf_DataHeroVOReloadHeroVODataForHero (int lp_heroIndex, int lp_player);
string libCore_gf_DataMinionUnitTypeFromPreset (int lp_type, int lp_team);
int libCore_gf_DataMinionTypeOfUnit (unit lp_unit);
bool libCore_gf_DataUnitGroupHasMinionType (int lp_minionType, unitgroup lp_unitGroup);
void libCore_gf_DataInitializeMinion (string lp_unitType, int lp_minionType, int lp_minionCount, int lp_team);
string libCore_gf_DataMountsMountCollectionCategory (int lp_mountIndex);
int libCore_gf_DataMountsFindMountWithMountID (string lp_moundID, int lp_variation);
int libCore_gf_DataMountsFindMountWithMountIDPersonal (string lp_mountIDPersonal);
void libCore_gf_DataMountsAddMountPlusVariationsToMountList (string lp_mountInstance);
int libCore_gf_DataSkinsFindSkinWithSkinID (string lp_skinID, int lp_variation);
int libCore_gf_DataSkinsFindSkinWithSkinIDPersonal (string lp_skinIDPersonal);
void libCore_gf_DataSkinsAddSkinPlusVariationsToSkinList (string lp_skinInstance);
void libCore_gf_UnitStatsBehaviorDataInitializeBehavior (string lp_behavior);
int libCore_gf_DataXPLevelGapBetweenHeroes (int lp_awardPlayer, unit lp_deadUnit);
fixed libCore_gf_DataXPGetValueCoefficientForUnit (unit lp_deadUnit);
fixed libCore_gf_DataXPXPForHero2 (int lp_awardPlayer, unit lp_deadUnit);
color libCore_gf_GetAllianceColorFromGameUIData (int lp_index);
fixed libCore_gf_GetWeaponDamageForUnit (unit lp_unit);
fixed libCore_gf_GetWeaponAttackSpeedForUnit (unit lp_unit);
int libCore_gf_GetValidWeaponIndexForUnit (unit lp_unit);
string libCore_gf_GetTimeStamp (fixed lp_time);
bool libCore_gf_ToggleBoolean (bool lp_boolean);
point libCore_gf_AdvancePointinDirection (point lp_point, point lp_dir, fixed lp_distance);
unit libCore_gf_CoreCurrentHeroOrVehicleOfPlayer (int lp_player);
point libCore_gf_ProjectPointOntoLine (point lp_p1, point lp_p2, point lp_t);
fixed libCore_gf_GetTotalXPForLevel (int lp_level);
string libCore_gf_ConvertStringToAnyGameLink (string lp_string);
bool libCore_gf_UnitHasBehaviorWithFlag (unit lp_unit, int lp_flag);
string libCore_gf_ConvertTextToString (text lp_text);
bool libCore_gf_CheckForCriticalDamage (unit lp_triggeringUnit, unit lp_damagingUnit, string lp_damagingEffect, int lp_damageType);
bool libCore_gf_CombatCheckDamageCriticalState (unit lp_triggeringUnit, unit lp_damagingUnit, string lp_damagingEffect, int lp_damageType);
int libCore_gf_CombatDamageTypeFromEffect (string lp_effect);
fixed libCore_gf_CombatCalculateDamageAmount ();
void RemoveDataTableValueInstance (int lp_instance, string lp_name);
void libCore_gf_DialogSetPositionRelativeToUnitWithAnchor (int lp_Dialog, unit lp_Unit, string lp_Attachment, int lp_Anchor, int lp_OffsetX, int lp_OffsetY);
string libCore_gf_ConvertIntegerToStringDoubleDigit (int lp_integer);
string libCore_gf_ConvertIntegerToStringTripleDigit (int lp_integer);
void libCore_gf_CreateArray (string lp_arrayName);
int LengthofArray (string lp_arrayName);
void libCore_gf_LengthAdd (string lp_arrayName);
bool libCore_gf_ArrayKeyExists (string lp_arrayName, int lp_arrayKey);
int libCore_gf_TypeofArrayValue (string lp_arrayName, int lp_arrayKey);
void libCore_gf_CommonSet (string lp_arrayName, int lp_arrayIndex);
void libCore_gf_SetArrayValueInteger (string lp_arrayName, int lp_arrayIndex, int lp_arrayValue);
void libCore_gf_SetArrayValueReal (string lp_arrayName, int lp_arrayIndex, fixed lp_arrayValue);
void libCore_gf_SetArrayValueAbilityCommand (string lp_arrayName, int lp_arrayIndex, abilcmd lp_arrayValue);
void libCore_gf_SetArrayValueBoolean (string lp_arrayName, int lp_arrayIndex, bool lp_arrayValue);
void libCore_gf_SetArrayValueDialog (string lp_arrayName, int lp_arrayIndex, int lp_arrayValue);
void libCore_gf_SetArrayValueDialogItem (string lp_arrayName, int lp_arrayIndex, int lp_arrayValue);
void libCore_gf_SetArrayValuePoint (string lp_arrayName, int lp_arrayIndex, point lp_arrayValue);
void libCore_gf_SetArrayValueRegion (string lp_arrayName, int lp_arrayIndex, region lp_arrayValue);
void libCore_gf_SetArrayValueString (string lp_arrayName, int lp_arrayIndex, string lp_arrayValue);
void libCore_gf_SetArrayValueTrigger (string lp_arrayName, int lp_arrayIndex, trigger lp_arrayValue);
void libCore_gf_SetArrayValueUnit (string lp_arrayName, int lp_arrayIndex, unit lp_arrayValue);
void libCore_gf_SetArrayValueUnitGroup (string lp_arrayName, int lp_arrayIndex, unitgroup lp_arrayValue);
void libCore_gf_PushArrayValueInteger (string lp_arrayName, int lp_arrayValue);
void libCore_gf_PushArrayValueReal (string lp_arrayName, fixed lp_arrayValue);
void libCore_gf_PushArrayValueAbilityCommand (string lp_arrayName, abilcmd lp_arrayValue);
void libCore_gf_PushArrayValueBoolean (string lp_arrayName, bool lp_arrayValue);
void libCore_gf_PushArrayValueDialog (string lp_arrayName, int lp_arrayValue);
void libCore_gf_PushArrayValueDialogItem (string lp_arrayName, int lp_arrayValue);
void libCore_gf_PushArrayValuePoint (string lp_arrayName, point lp_arrayValue);
void libCore_gf_PushArrayValueRegion (string lp_arrayName, region lp_arrayValue);
void libCore_gf_PushArrayValueString (string lp_arrayName, string lp_arrayValue);
void libCore_gf_PushArrayValueTrigger (string lp_arrayName, trigger lp_arrayValue);
void libCore_gf_PushArrayValueUnit (string lp_arrayName, unit lp_arrayValue);
void libCore_gf_PushArrayValueUnitGroup (string lp_arrayName, unitgroup lp_arrayValue);
int libCore_gf_GetArrayValueInteger (string lp_arrayName, int lp_arrayIndex);
fixed libCore_gf_GetArrayValueReal (string lp_arrayName, int lp_arrayIndex);
abilcmd libCore_gf_GetArrayValueAbilityCommand (string lp_arrayName, int lp_arrayIndex);
bool libCore_gf_GetArrayValueBoolean (string lp_arrayName, int lp_arrayIndex);
int libCore_gf_GetArrayValueDialog (string lp_arrayName, int lp_arrayIndex);
int libCore_gf_GetArrayValueDialogItem (string lp_arrayName, int lp_arrayIndex);
point libCore_gf_GetArrayValuePoint (string lp_arrayName, int lp_arrayIndex);
region libCore_gf_GetArrayValueRegion (string lp_arrayName, int lp_arrayIndex);
string libCore_gf_GetArrayValueString (string lp_arrayName, int lp_arrayIndex);
trigger libCore_gf_GetArrayValueTrigger (string lp_arrayName, int lp_arrayIndex);
unit libCore_gf_GetArrayValueUnit (string lp_arrayName, int lp_arrayIndex);
unitgroup libCore_gf_GetArrayValueUnitGroup (string lp_arrayName, int lp_arrayIndex);
int libCore_gf_SearchArrayValueInteger (string lp_arrayName, int lp_value);
int libCore_gf_SearchArrayValueReal (string lp_arrayName, fixed lp_value);
int libCore_gf_SearchArrayValueAbilityCommand (string lp_arrayName, abilcmd lp_value);
int libCore_gf_SearchArrayValueBoolean (string lp_arrayName, bool lp_value);
int libCore_gf_SearchArrayValueDialog (string lp_arrayName, int lp_value);
int libCore_gf_SearchArrayValueDialogItem (string lp_arrayName, int lp_value);
int libCore_gf_SearchArrayValuePoint (string lp_arrayName, point lp_value);
int libCore_gf_SearchArrayValueRegion (string lp_arrayName, region lp_value);
int libCore_gf_SearchArrayValueString (string lp_arrayName, string lp_value);
int libCore_gf_SearchArrayValueTrigger (string lp_arrayName, trigger lp_value);
int libCore_gf_SearchArrayValueUnit (string lp_arrayName, unit lp_value);
int libCore_gf_SearchArrayValueUnitGroup (string lp_arrayName, unitgroup lp_value);
void libCore_gf_SetArrayValuetoArrayValue (string lp_arrayName1, int lp_arrayIndex1, string lp_arrayName2, int lp_arrayIndex2);
void libCore_gf_SplitStringintoArray (string lp_arrayName, string lp_string, string lp_delimiter);
string libCore_gf_JoinArrayintoString (string lp_arrayName, string lp_glue);
int libCore_gf_IndexofGreatestLowestValue (string lp_arrayName, bool lp_greatestLowest);
void libCore_gf_sortArray (string lp_arrayName, bool lp_ascendingDescendingOrder);
void libCore_gf_CopyArray (string lp_arrayName, string lp_newArrayName);
void libCore_gf_DeleteArrayKey (string lp_arrayName, int lp_arrayKey);
void libCore_gf_Move (string lp_arrayName, int lp_indexFrom, int lp_indexTo);
void libCore_gf_SwapArrayValues (string lp_arrayName, int lp_arrayIndex1, int lp_arrayIndex2);
void libCore_gf_ReverseArray (string lp_arrayName);
void libCore_gf_Shuffle (string lp_arrayName);
void libCore_gf_MergeArrays (string lp_arrayName1, string lp_arrayName2);
int libCore_gf_UnitInventoryItemPositionInInventoryOfUnit (string lp_inventoryItem, unit lp_unit);
unit libCore_gf_InvetoryItemInInventoryPositionOfUnit (unit lp_unit, int lp_inventoryPosition);
void libCore_gf_CreateMinimapPingCore (playergroup lp_players, string lp_pingData, point lp_position, color lp_color, fixed lp_duration);
void libCore_gf_CreatePingFacingAngleWithType (playergroup lp_players, string lp_model, point lp_position, color lp_color, fixed lp_duration, fixed lp_angle, int lp_pingingPlayerID);
void libCore_gf_ChangeCollisionToTeamForPlayerHero (int lp_player);
void libCore_gf_ChangeCollisionForPlayerForUnitType (int lp_player, string lp_unitType, int lp_collisionType, int lp_operation);
playergroup libCore_gf_PlayerGroupExceptOfPlayer (playergroup lp_sourceGroup, int lp_exceptedPlayer);
playergroup libCore_gf_PlayerGroupMuting (int lp_muteType, int lp_player, bool lp_muted);
playergroup PlayerGroupExceptOfPlayerGroup (playergroup lp_playerGroupA, playergroup lp_playerGroupB);
bool libCore_gf_TechAliasExist (int lp_catalog, string lp_catalogEntry, string lp_techAlias);
bool libCore_gf_TechAliasExistPreset (int lp_catalog, string lp_catalogEntry, string lp_techAlias);
int libCore_gf_TriggerEventType ();
int libCore_gf_TriggerEventIndex ();
string libCore_gf_HeroAbilityButtonHotkeyPath (string lp_heroUnitType, string lp_abilityButton);
void libCore_gf_UnitBehaviorRemoveChargeRegen (unit lp_inUnit, string lp_inBehavior, string lp_inCharge);
void libCore_gf_UnitAbilityRemoveChargeRegen (unit lp_inUnit, string lp_inAbil, string lp_inCharge);
void libCore_gf_UnitRemoveChargeRegen (unit lp_inUnit, string lp_inCharge);
bool libCore_gf_AbsorbedDamageLifestealValid (string lp_behavior);
bool libCore_gf_AbsorbedDamageTextTagValid (string lp_behavior);
bool libCore_gf_AbsorbedDamageScoreValid (string lp_behavior);
fixed libCore_gf_AbsorbedFatalDamageCalculateDamage (unit lp_triggeringUnit);
fixed libCore_gf_AbsorbedFatalDamageValidDamage (unit lp_triggeringUnit, string lp_absorbingBehavior, fixed lp_absorbedDamage);
string libCore_gf_GetWeaponDamageForUnit2 (unit lp_unit);
string libCore_gf_GetWeaponDamageForUnit3 (unit lp_unit);
bool libCore_gf_UserDataBoolean (string lp_userDataInstance);
bool libCore_gf_UserDataDefault (string lp_userDataInstance);
bool libCore_gf_ExecuteValidatorOnUnit (string lp_validator, unit lp_sourceUnit, unit lp_targetUnit);
string libCore_gf__UnitDataName (int lp_type, unit lp_unit, int lp_index);
void libCore_gf_StoreActorForUnit (unit lp_unit, int lp_index, actor lp_actor);
actor libCore_gf_ActorStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StoreTextTagForUnit (unit lp_unit, int lp_index, int lp_textTag);
int libCore_gf_TextTagStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StorePointForUnit (unit lp_unit, int lp_index, point lp_point);
point libCore_gf_PointStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StoreRegionForUnit (unit lp_unit, int lp_index, region lp_region);
region libCore_gf_RegionStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StorePingForUnit (unit lp_unit, int lp_index, int lp_ping);
int libCore_gf_PingStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StoreIntegerForUnit (unit lp_unit, int lp_index, int lp_value);
int libCore_gf_IntegerStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StoreUnitForUnit (unit lp_unit, int lp_index, unit lp_value);
unit libCore_gf_UnitStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StoreUnitGroupForUnit (unit lp_unit, int lp_index, unitgroup lp_value);
unitgroup libCore_gf_UnitGroupStoredForUnit (unit lp_unit, int lp_index);

// Trigger Declarations
trigger libCore_gt_InitializeCommandersMod;
trigger libCore_gt_InitializeGameMod;
trigger libCore_gt_InitializeCoreMod;
trigger libCore_gt_InitializeData;
trigger libCore_gt_InitializeMiscStuff;
trigger libCore_gt_InitializeDataMiningAndDebugOutput;
trigger libCore_gt_DataInitializeAbilities;
trigger libCore_gt_DataInitializeAnnouncerVOData2;
trigger libCore_gt_DataHeroesDeathTimes;
trigger libCore_gt_DataInitializeHeroes;
trigger libCore_gt_DataHeroVOMapDataFields;
trigger libCore_gt_DataHeroVOInitializeHeroVOData;
trigger libCore_gt_DataInitializeMountData;
trigger libCore_gt_DataInitializeSkinData;
trigger libCore_gt_DataInitializeTalents;
trigger libCore_gt_UnitStatsBehaviorDataInitialize;
trigger libCore_gt_DataXPInitializeLevelXPValues;

// Library Initialization
void libCore_InitVariables ();

